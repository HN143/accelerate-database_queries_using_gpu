2025-04-19T00:17:52.919112 I 38833 0 0 CommandLineOptions.cpp:1887  Max import threads 32
2025-04-19T00:17:52.919199 I 38833 0 0 CommandLineOptions.cpp:1896  Min CPU buffer pool slab size (in bytes) 268435456
2025-04-19T00:17:52.919207 I 38833 0 0 CommandLineOptions.cpp:1898  Max CPU buffer pool slab size (in bytes) 4294967296
2025-04-19T00:17:52.919212 I 38833 0 0 CommandLineOptions.cpp:1900  Min GPU buffer pool slab size (in bytes) 268435456
2025-04-19T00:17:52.919216 I 38833 0 0 CommandLineOptions.cpp:1902  Max GPU buffer pool slab size (in bytes) 4294967296
2025-04-19T00:17:52.919220 I 38833 0 0 CommandLineOptions.cpp:1904  calcite JVM max memory (in MB) 1024
2025-04-19T00:17:52.919224 I 38833 0 0 CommandLineOptions.cpp:1905  HeavyDB Server Port 6274
2025-04-19T00:17:52.919229 I 38833 0 0 CommandLineOptions.cpp:1906  HeavyDB Calcite Port 6279
2025-04-19T00:17:52.919232 I 38833 0 0 CommandLineOptions.cpp:1907  Enable Calcite view optimize true
2025-04-19T00:17:52.919237 I 38833 0 0 CommandLineOptions.cpp:1909  Allow Local Auth Fallback: enabled
2025-04-19T00:17:52.919241 I 38833 0 0 CommandLineOptions.cpp:1911  ParallelTop min threshold: 100000
2025-04-19T00:17:52.919245 I 38833 0 0 CommandLineOptions.cpp:1912  ParallelTop watchdog max: 20000000
2025-04-19T00:17:52.919249 I 38833 0 0 CommandLineOptions.cpp:1914  Enable Data Recycler: enabled
2025-04-19T00:17:52.919253 I 38833 0 0 CommandLineOptions.cpp:1917  	 Use hashtable cache: enabled
2025-04-19T00:17:52.919257 I 38833 0 0 CommandLineOptions.cpp:1920  		 Total amount of bytes that hashtable cache keeps: 4096 MB.
2025-04-19T00:17:52.919262 I 38833 0 0 CommandLineOptions.cpp:1922  		 Per-hashtable size limit: 2048 MB.
2025-04-19T00:17:52.919265 I 38833 0 0 CommandLineOptions.cpp:1925  	 Use query resultset cache: enabled
2025-04-19T00:17:52.919270 I 38833 0 0 CommandLineOptions.cpp:1928  		 Total amount of bytes that query resultset cache keeps: 4096 MB.
2025-04-19T00:17:52.919274 I 38833 0 0 CommandLineOptions.cpp:1930  		 Per-query resultset size limit: 2048 MB.
2025-04-19T00:17:52.919278 I 38833 0 0 CommandLineOptions.cpp:1933  		 Use auto query resultset caching: disabled
2025-04-19T00:17:52.919282 I 38833 0 0 CommandLineOptions.cpp:1940  		 Use query step skipping: enabled
2025-04-19T00:17:52.919285 I 38833 0 0 CommandLineOptions.cpp:1942  	 Use chunk metadata cache: enabled
2025-04-19T00:17:52.919290 I 38833 0 0 CommandLineOptions.cpp:1945 Executor Resource Manager: enabled
2025-04-19T00:17:52.919293 I 38833 0 0 CommandLineOptions.cpp:1948 	CPU kernel concurrency: enabled
2025-04-19T00:17:52.919297 I 38833 0 0 CommandLineOptions.cpp:1951 	CPU-GPU kernel concurrency: enabled
2025-04-19T00:17:52.919302 I 38833 0 0 CommandLineOptions.cpp:1958 	CPU result set reserved ratio of CPU buffer pool size: 0.8
2025-04-19T00:17:52.919309 I 38833 0 0 CommandLineOptions.cpp:1961 	Per-query max CPU threads ratio: 0.9
2025-04-19T00:17:52.919313 I 38833 0 0 CommandLineOptions.cpp:1963 	Per-query max CPU result memory ratio of allocated total: 0.8
2025-04-19T00:17:52.919318 I 38833 0 0 CommandLineOptions.cpp:1965 	Allow concurrent CPU thread/slot oversubscription: disabled
2025-04-19T00:17:52.919322 I 38833 0 0 CommandLineOptions.cpp:1969 	Allow concurrent CPU result memory oversubscription: disabled
2025-04-19T00:17:52.919326 I 38833 0 0 CommandLineOptions.cpp:1974 	Per-query Max available resource utilization ratio: 0.8
2025-04-19T00:17:52.919330 I 38833 0 0 CommandLineOptions.cpp:1985 Runtime UDF/UDTF Registration Policy:  ALLOWED for superusers only
2025-04-19T00:17:52.919342 1 38833 0 0 CommandLineOptions.cpp:1237 taking [/var/lib/heavyai/storage/heavydb_pid.lck] read+write lock until process exit
2025-04-19T00:17:52.919409 I 38833 0 0 CommandLineOptions.cpp:1318 HeavyDB started with data directory at '/var/lib/heavyai/storage'
2025-04-19T00:17:52.919416 I 38833 0 0 CommandLineOptions.cpp:1323  Server read-only mode is false (--read-only)
2025-04-19T00:17:52.919420 I 38833 0 0 CommandLineOptions.cpp:1340  Threading layer: TBB
2025-04-19T00:17:52.919425 I 38833 0 0 CommandLineOptions.cpp:1344  Watchdog is set to true
2025-04-19T00:17:52.919433 I 38833 0 0 CommandLineOptions.cpp:1345  Dynamic Watchdog is set to false
2025-04-19T00:17:52.919438 I 38833 0 0 CommandLineOptions.cpp:1349  Runtime query interrupt is set to true
2025-04-19T00:17:52.919442 I 38833 0 0 CommandLineOptions.cpp:1351  A frequency of checking pending query interrupt request is set to 1000 (in ms.)
2025-04-19T00:17:52.919446 I 38833 0 0 CommandLineOptions.cpp:1353  A frequency of checking running query interrupt request is set to 0.1 (0.0 ~ 1.0)
2025-04-19T00:17:52.919451 I 38833 0 0 CommandLineOptions.cpp:1356  Non-kernel time query interrupt is set to true
2025-04-19T00:17:52.919455 I 38833 0 0 CommandLineOptions.cpp:1359  Debug Timer is set to true
2025-04-19T00:17:52.919459 I 38833 0 0 CommandLineOptions.cpp:1360  LogUserId is set to false
2025-04-19T00:17:52.919463 I 38833 0 0 CommandLineOptions.cpp:1361  Maximum idle session duration 60
2025-04-19T00:17:52.919467 I 38833 0 0 CommandLineOptions.cpp:1362  Maximum active session duration 43200
2025-04-19T00:17:52.919471 I 38833 0 0 CommandLineOptions.cpp:1363  Maximum number of sessions -1
2025-04-19T00:17:52.919475 I 38833 0 0 CommandLineOptions.cpp:1365 Legacy delimited import is set to true
2025-04-19T00:17:52.919480 I 38833 0 0 CommandLineOptions.cpp:1367 Legacy parquet import is set to false
2025-04-19T00:17:52.919484 I 38833 0 0 CommandLineOptions.cpp:1369 FSI regex parsed import is set to true
2025-04-19T00:17:52.919488 I 38833 0 0 CommandLineOptions.cpp:1371 Allowed import paths is set to ["/"]
2025-04-19T00:17:52.919491 I 38833 0 0 CommandLineOptions.cpp:1372 Allowed export paths is set to ["/"]
2025-04-19T00:17:52.919522 I 38833 0 0 DdlUtils.cpp:874 Parsed allowed-import-paths: (/var/lib/heavyai/storage/import /)
2025-04-19T00:17:52.919532 I 38833 0 0 DdlUtils.cpp:874 Parsed allowed-export-paths: (/var/lib/heavyai/storage/export /)
2025-04-19T00:17:52.919547 I 38833 0 0 CommandLineOptions.cpp:1394 FSI has been enabled as a side effect of enabling non-legacy import.
2025-04-19T00:17:52.919553 I 38833 0 0 CommandLineOptions.cpp:1517 Disk cache enabled for foreign tables only
2025-04-19T00:17:52.919557 I 38833 0 0 CommandLineOptions.cpp:1564 Vacuum Min Selectivity: 0.1
2025-04-19T00:17:52.919563 I 38833 0 0 CommandLineOptions.cpp:1566 Enable system tables is set to true
2025-04-19T00:17:52.919567 I 38833 0 0 CommandLineOptions.cpp:1575 Enable FSI is set to true
2025-04-19T00:17:52.919571 I 38833 0 0 CommandLineOptions.cpp:1576 Enable logs system tables set to false
2025-04-19T00:17:52.919575 I 38833 0 0 CommandLineOptions.cpp:1583 Maximum number of logs system table files set to 100
2025-04-19T00:17:52.919579 I 38833 0 0 HeavyDB.cpp:388 HeavyDB starting up
2025-04-19T00:17:52.919603 I 38833 0 0 HeavyDB.cpp:392 Initializing TBB with 32 threads.
2025-04-19T00:17:52.920158 I 38833 0 0 HeavyDB.cpp:397 TBB max concurrency: 32 threads.
2025-04-19T00:17:52.921301 1 38833 0 0 HeavyDB.cpp:327 heartbeat thread starting
2025-04-19T00:17:52.921406 I 38833 0 0 DBHandler.cpp:244 HeavyDB Server 7.1.0-20231018-69d8a78a07
2025-04-19T00:17:53.008788 I 38833 0 0 CudaMgr.cpp:515 Using 1 Gpus.
2025-04-19T00:17:53.008824 1 38833 0 0 CudaMgr.cpp:517 Device: 0
2025-04-19T00:17:53.008831 1 38833 0 0 CudaMgr.cpp:518 UUID: 8c8b4619-0dfc-3e11-b9db-9f2b8cd9a4b5
2025-04-19T00:17:53.008836 1 38833 0 0 CudaMgr.cpp:519 Clock (khz): 1500000
2025-04-19T00:17:53.008840 1 38833 0 0 CudaMgr.cpp:520 Compute Major: 8
2025-04-19T00:17:53.008844 1 38833 0 0 CudaMgr.cpp:521 Compute Minor: 6
2025-04-19T00:17:53.008848 1 38833 0 0 CudaMgr.cpp:522 PCI bus id: 1
2025-04-19T00:17:53.008852 1 38833 0 0 CudaMgr.cpp:523 PCI deviceId id: 0
2025-04-19T00:17:53.008856 1 38833 0 0 CudaMgr.cpp:524 Per device global memory: 3.79565 GB
2025-04-19T00:17:53.008864 1 38833 0 0 CudaMgr.cpp:526 Memory clock (khz): 6001000
2025-04-19T00:17:53.008868 1 38833 0 0 CudaMgr.cpp:527 Memory bandwidth: 96.016 GB/sec
2025-04-19T00:17:53.008873 1 38833 0 0 CudaMgr.cpp:530 Constant Memory: 65536
2025-04-19T00:17:53.008877 1 38833 0 0 CudaMgr.cpp:531 Shared memory per multiprocessor: 102400
2025-04-19T00:17:53.008888 1 38833 0 0 CudaMgr.cpp:533 Shared memory per block: 49152
2025-04-19T00:17:53.008892 1 38833 0 0 CudaMgr.cpp:534 Number of MPs: 16
2025-04-19T00:17:53.008896 1 38833 0 0 CudaMgr.cpp:535 Warp Size: 32
2025-04-19T00:17:53.008900 1 38833 0 0 CudaMgr.cpp:536 Max threads per block: 1024
2025-04-19T00:17:53.008903 1 38833 0 0 CudaMgr.cpp:537 Max registers per block: 65536
2025-04-19T00:17:53.008908 1 38833 0 0 CudaMgr.cpp:538 Max register per MP: 65536
2025-04-19T00:17:53.008912 1 38833 0 0 CudaMgr.cpp:539 Memory bus width in bits: 128
2025-04-19T00:17:53.008915 I 38833 0 0 CudaMgr.cpp:68 Warming up the GPU JIT Compiler... (this may take several seconds)
2025-04-19T00:17:53.009879 1 38833 0 0 NvidiaKernel.cpp:91 CUDA JIT time to create link: 0.948305
2025-04-19T00:17:53.108147 1 38833 0 0 NvidiaKernel.cpp:100 CUDA JIT time to add RT fatbinary: 17.1022
2025-04-19T00:17:53.108937 1 38833 0 0 NvidiaKernel.cpp:109 CUDA JIT time to add GPU table functions library: 17.3574
2025-04-19T00:17:53.111323 I 38833 0 0 CudaMgr.cpp:71 GPU JIT Compiler initialized.
2025-04-19T00:17:53.111345 I 38833 0 0 ArrowForeignStorage.cpp:880 CSV backed temporary tables has been activated. Create table `with (storage_type='CSV:path/to/file.csv');`
2025-04-19T00:17:53.111351 I 38833 0 0 ArrowForeignStorage.cpp:1058 CSV backed temporary tables has been activated. Create table `with (storage_type='CSV:path/to/file.csv');`
2025-04-19T00:17:53.111463 I 38833 0 0 FileMgr.cpp:241 Completed Reading table's file metadata, Elapsed time : 0ms Epoch: 0 files read: 0 table location: '/var/lib/heavyai/storage/disk_cache'
2025-04-19T00:17:53.111470 3 38833 0 0 CachingFileMgr.cpp:97 Number of Headers in Vector: 0
2025-04-19T00:17:53.111493 1 38833 0 0 DataMgr.cpp:260 Detected 15841.9M of total system memory.
2025-04-19T00:17:53.111500 I 38833 0 0 DataMgr.cpp:269 Min CPU Slab Size is 256MB
2025-04-19T00:17:53.111504 I 38833 0 0 DataMgr.cpp:270 Max CPU Slab Size is 4096MB
2025-04-19T00:17:53.111509 I 38833 0 0 DataMgr.cpp:271 Max memory pool size for CPU is 12673.5MB
2025-04-19T00:17:53.111513 I 38833 0 0 DataMgr.cpp:293 Reserved GPU memory is 384MB includes render buffer allocation
2025-04-19T00:17:53.111522 I 38833 0 0 DataMgr.cpp:312 Min GPU Slab size for GPU 0 is 256MB
2025-04-19T00:17:53.111527 I 38833 0 0 DataMgr.cpp:314 Max GPU Slab size for GPU 0 is 3502.75MB
2025-04-19T00:17:53.111531 I 38833 0 0 DataMgr.cpp:316 Max memory pool size for GPU 0 is 3502.75MB
2025-04-19T00:17:53.111594 I 38833 0 0 FileMgr.cpp:241 Completed Reading table's file metadata, Elapsed time : 0ms Epoch: 0 files read: 0 table location: '/var/lib/heavyai/storage/data/table_0_0'
2025-04-19T00:17:53.111599 3 38833 0 0 FileMgr.cpp:280 Number of Headers in Vector: 0
2025-04-19T00:17:53.111621 I 38833 0 0 DBHandler.cpp:255 Initializing Executor Resource Manager
2025-04-19T00:17:53.111626 I 38833 0 0 DBHandler.cpp:263 	Setting Executor resource pool avaiable CPU threads/slots to default value of 32.
2025-04-19T00:17:53.111642 I 38833 0 0 DBHandler.cpp:274 	Setting max per-query CPU threads to ratio of 0.9 of 32 available threads, or 28 threads.
2025-04-19T00:17:53.111650 I 38833 0 0 DBHandler.cpp:325 	Setting Executor resource pool reserved space for CPU buffer pool memory to 11.75 GB.
2025-04-19T00:17:53.111666 I 38833 0 0 DBHandler.cpp:329 	Setting Executor resource pool reserved space for GPU buffer pool memory to 3.24 GB.
2025-04-19T00:17:53.111670 I 38833 0 0 DBHandler.cpp:333 	Setting Executor resource pool reserved space for CPU result memory to 4.0 GB.
2025-04-19T00:17:53.111752 I 38833 0 0 Calcite.cpp:373 Creating Calcite Handler,  Calcite Port is 6279 base data dir is /var/lib/heavyai/storage
2025-04-19T00:17:53.111758 I 38833 0 0 Calcite.cpp:281 Running Calcite server as a daemon
2025-04-19T00:17:53.727549 I 38833 0 0 Calcite.cpp:321 Calcite server start took 600 ms 
2025-04-19T00:17:53.727601 I 38833 0 0 Calcite.cpp:322 ping took 10 ms 
2025-04-19T00:17:53.732481 1 38833 0 0 Calcite.cpp:634 [{"name":"Truncate__","annotations":[{},{},{"uses_manager":"false"}],"ret":"float","args":["float","i32"]},{"name":"area_triangle","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double","double","double"]},{"name":"ST_AsBinary__GeoMultiPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPoint"]},{"name":"box_contains_point","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i64","double","double"]},{"name":"Round__","annotations":[{},{},{"uses_manager":"false"}],"ret":"float","args":["float","i32"]},{"name":"array_first_half__f64","annotations":[{},{"uses_manager":"false"}],"ret":"Array<double>","args":["Array<double>"]},{"name":"array_equal__textdict","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<TextEncodingDict>","Array<TextEncodingDict>"]},{"name":"ST_YMax","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"ST_AsWkt__GeoMultiPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPoint"]},{"name":"ST_Intersects_Point_Point","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"distance_point_point_squared","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double"]},{"name":"centroid_add_polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32","i32","i32","double*","double*","double*","double*","i64*","double*"]},{"name":"h3ToGeoPacked","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"ST_AsBinary__GeoPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPolygon"]},{"name":"perimeter_multipolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i8*","i32","i32","i32","i32","i1"]},{"name":"ST_Distance_Polygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_downAp7","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"ST_Centroid_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"void","args":["i8*","i32","i32*","i32","i32*","i32","i32","i32","i32","double*"]},{"name":"array_equal__f32","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<float>","Array<float>"]},{"name":"ST_AsWkt__GeoPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPolygon"]},{"name":"convert_meters_to_pixel_height","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i8*","i64","i32","i32","i32","double","double","i32","double"]},{"name":"_hex2dToGeo","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i32","i32","i32","double*"]},{"name":"tol_eq","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double"]},{"name":"ST_YMin_Bounds","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","i64","i32","i32"]},{"name":"ST_Centroid_Polygon","annotations":[{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"void","args":["i8*","i32","i32*","i32","i32","i32","i32","double*"]},{"name":"_square","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Log10","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_YMax_Bounds","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","i64","i32","i32"]},{"name":"ct_device_selection_udf_gpu__gpu_","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"ST_DWithin_Point_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"round_to_digit","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i32"]},{"name":"_ijkScale","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32"]},{"name":"_rotate60cw","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"array_append__3","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<double>","args":["Array<double>","double"]},{"name":"array_append__2","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i8>","args":["Array<i8>","i8"]},{"name":"array_append__1","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i16>","args":["Array<i16>","i16"]},{"name":"_geoToFaceIjk","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i32","i32*"]},{"name":"array_append__4","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<float>","args":["Array<float>","float"]},{"name":"x_and_y_are_dependent","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32","i32"]},{"name":"ST_XMin_Bounds","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","i64","i32","i32"]},{"name":"raw_array_as_scalar_same_type","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64*","i64"]},{"name":"ST_X_Point","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"ST_Distance_LineString_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"array_append","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i64>","args":["Array<i64>","i64"]},{"name":"ST_Length_LineString_Geodesic","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"point_in_polygon_winding_number","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i32","i64","i64","i32","i32","i32"]},{"name":"array_first_half__t32","annotations":[{},{"uses_manager":"true"}],"ret":"Array<TextEncodingDict>","args":["Array<TextEncodingDict>"]},{"name":"ST_cContains_MultiPolygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_cIntersects_MultiPolygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"udf_identity","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["TextEncodingNone"]},{"name":"_v2dMag","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double*"]},{"name":"_neighbor","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32"]},{"name":"ST_cIntersects_Polygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"strtok_to_array__1","annotations":[{},{},{"uses_manager":"true"}],"ret":"Array<TextEncodingDict>","args":["TextEncodingDict","TextEncodingNone"]},{"name":"ST_Distance_MultiLineString_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_AsText__GeoMultiLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiLineString"]},{"name":"reg_hex_horiz_pixel_bin_y","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"reg_hex_horiz_pixel_bin_x","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"compressed_coord","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i8*","i32"]},{"name":"ST_Distance_Point_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"area_polygon","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"ct_device_selection_udf_both__gpu_","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"Log__","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["float"]},{"name":"text_encoding_dict_concat","annotations":[{},{},{"uses_manager":"true"}],"ret":"TextEncodingDict","args":["TextEncodingDict","TextEncodingNone"]},{"name":"ST_XMax","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"ST_DWithin_MultiPolygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_ijkToHex2d","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","double*"]},{"name":"ST_Perimeter_MultiPolygon_Geodesic","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"ST_Distance_MultiPoint_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Contains_Point_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_AsWkb__GeoPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPolygon"]},{"name":"centroid_add_triangle","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double","double","double","double*","double*"]},{"name":"distance_point_linestring","annotations":[{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","i1","double"]},{"name":"ST_Contains_Point_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ct_sleep_us__cpu_","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i64"]},{"name":"array_second_half__i64","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i64>","args":["Array<i64>"]},{"name":"h3ToLat","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["i64"]},{"name":"ST_Distance_Point_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Distance_LineString_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"array_second_half_impl","annotations":[{},{"uses_manager":"false"}],"ret":"Array<TextEncodingDict>","args":["Array<TextEncodingDict>"]},{"name":"ST_AsWkb__GeoMultiPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPoint"]},{"name":"_h3ToGeo","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i64","double*"]},{"name":"array_second_half__i16","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i16>","args":["Array<i16>"]},{"name":"_upAp7r","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"Point_Overlaps_Box","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i64","double","double"]},{"name":"point_dwithin_box","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32","i32","double*","i64","i32","i32","double"]},{"name":"Floor__2","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"ST_Distance_Point_ClosedLineString","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"Floor__3","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"ST_Intersects_Point_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Distance_MultiPolygon_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"Floor__1","annotations":[{},{"uses_manager":"false"}],"ret":"i16","args":["i16"]},{"name":"ST_Intersects_Point_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_AsBinary__GeoLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoLineString"]},{"name":"array_append__","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i32>","args":["Array<i32>","i32"]},{"name":"_upAp7","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"ST_AsText__GeoLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoLineString"]},{"name":"_faceIjkToH3","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["i32*","i32"]},{"name":"Sinh","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"barray_append","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<bool>","args":["Array<bool>","i1"]},{"name":"ST_XMin","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"ST_DWithin_Polygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Distance_MultiPolygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i32*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_AsBinary__GeoPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPoint"]},{"name":"ST_Intersects_LineString_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Distance_MultiLineString_MultiLineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Perimeter_Polygon","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"ST_DWithin_Point_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"geoToH3","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i64","args":["double","double","i32"]},{"name":"ST_Distance_Polygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Intersects_MultiPolygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"array_first_half__b8","annotations":[{},{"uses_manager":"false"}],"ret":"Array<bool>","args":["Array<bool>"]},{"name":"max_distance_point_line","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double","double","double"]},{"name":"HeavyDB_Geo_PolyBoundsPtr","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["double*","i64"]},{"name":"array_second_half__b8","annotations":[{},{"uses_manager":"false"}],"ret":"Array<bool>","args":["Array<bool>"]},{"name":"_pointSquareDist","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","double*"]},{"name":"ST_DWithin_LineString_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_unitIjkToDigit","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32*"]},{"name":"array_equal__i8","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<i8>","Array<i8>"]},{"name":"ST_Contains_Polygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"Sin","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_Distance_Polygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Distance_Point_MultiPoint_Squared","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"array_second_half__i32","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i32>","args":["Array<i32>"]},{"name":"ST_Distance_LineString_Point_Geodesic","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"distance_point_point","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double"]},{"name":"_downAp7r","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"ST_Contains_Polygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"tol_ge","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double"]},{"name":"ST_Distance_MultiPoint_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Contains_LineString_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_XMax_Bounds","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","i64","i32","i32"]},{"name":"ST_Intersects_MultiPolygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ln__","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["float"]},{"name":"ST_Contains_MultiPolygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"text_encoding_none_concat","annotations":[{},{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["TextEncodingNone","TextEncodingNone"]},{"name":"distance_point_multilinestring","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_AsWkt__GeoMultiPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPolygon"]},{"name":"convert_meters_to_merc_pixel_width","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double","double","i32","double"]},{"name":"ST_AsWkt__GeoMultiLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiLineString"]},{"name":"ST_Intersects_Polygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Length_LineString","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"ST_AsText__GeoPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPolygon"]},{"name":"ST_Perimeter_Polygon_Geodesic","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"ST_Contains_Point_Point","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"tarray_append","annotations":[{},{},{"uses_manager":"true"}],"ret":"Array<TextEncodingDict>","args":["Array<TextEncodingDict>","TextEncodingDict"]},{"name":"ST_Area_Polygon","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"is_inf","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["double"]},{"name":"ST_AsText__GeoPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPoint"]},{"name":"ct_device_selection_udf_both__cpu_","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"array_first_half__f32","annotations":[{},{"uses_manager":"false"}],"ret":"Array<float>","args":["Array<float>"]},{"name":"box_dwithin_box","annotations":[{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i64","i32","double*","i64","i32","i32","double"]},{"name":"centroid_add_linestring","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32","i32","i32","i1","double*","double*","i64*","double*"]},{"name":"Log10__","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["float"]},{"name":"ST_Intersects_MultiPolygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"Asin","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_Distance_MultiPolygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"rect_pixel_bin_x","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","i32"]},{"name":"rect_pixel_bin_y","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","i32"]},{"name":"ST_Intersects_LineString_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"is_inf__","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["float"]},{"name":"is_point_in_view","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32","double","double","double","double"]},{"name":"is_point_size_in_merc_view","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double","double","double"]},{"name":"array_equal__f64","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<double>","Array<double>"]},{"name":"ST_Centroid_MultiPoint","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"void","args":["i8*","i32","i32","i32","i32","double*"]},{"name":"_ijkRotate60ccw","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"ST_Distance_LineString_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Intersects_LineString_Linestring","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Distance_Polygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Distance_Point_Point_Geodesic","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"Contains_MultiPolygon_Point_Impl","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_AsText__GeoMultiPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPoint"]},{"name":"ST_Distance_MultiPoint_Point_Squared","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"raw_array_as_array_diff_type","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i32>","args":["i64*","i64"]},{"name":"_geoToHex2d","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i32","i32*","double*"]},{"name":"_adjustOverageClassII","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i32","args":["i32*","i32","i32","i32"]},{"name":"degrees","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"array_second_half__t32","annotations":[{},{"uses_manager":"true"}],"ret":"Array<TextEncodingDict>","args":["Array<TextEncodingDict>"]},{"name":"approx_distance_in_meters","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["float","float","float","float"]},{"name":"raw_array_as_scalar_diff_type","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i64*","i64"]},{"name":"constrainLng","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_Length_MultiLineString","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32"]},{"name":"array_first_half__i32","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i32>","args":["Array<i32>"]},{"name":"ST_Intersects_LineString_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_DWithin_LineString_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_posAngleRads","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Tanh","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"array_equal__i16","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<i16>","Array<i16>"]},{"name":"_isBaseCellPentagon","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"ST_MaxDistance_Point_LineString","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"_h3ToFaceIjk","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i64","i32*"]},{"name":"Log","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"is_nan","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["double"]},{"name":"ST_Perimeter_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"tol_zero_template","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i64","i64"]},{"name":"centroid_add_ring","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32","i32","i32","double","double*","double*","double*","double*","i64*","double*"]},{"name":"_ijkSub","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32*","i32*"]},{"name":"ST_YMin","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"array_second_half__f64","annotations":[{},{"uses_manager":"false"}],"ret":"Array<double>","args":["Array<double>"]},{"name":"_h3ToFaceIjkWithInitializedFijk","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i64","i32*"]},{"name":"Ceil","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"polygon_contains_point","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i32","double","double","i32","i32","i32"]},{"name":"ST_Distance_MultiLineString_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Distance_LineString_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Centroid_LineString","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"void","args":["i8*","i32","i32","i32","i32","double*"]},{"name":"ST_Distance_Point_LineString_Geodesic","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"distance_in_meters__","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["float","float","float","float"]},{"name":"Floor__","annotations":[{},{"uses_manager":"false"}],"ret":"float","args":["float"]},{"name":"box_overlaps_box","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i64","double*","i64"]},{"name":"decompress_coord","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i32"]},{"name":"isResClassIII","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"array_first_half__i64","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i64>","args":["Array<i64>"]},{"name":"array_append_impl","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<float>","args":["Array<float>","float"]},{"name":"array_first_half_impl","annotations":[{},{"uses_manager":"false"}],"ret":"Array<TextEncodingDict>","args":["Array<TextEncodingDict>"]},{"name":"max_distance_point_linestring","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","i1"]},{"name":"ST_AsBinary__GeoMultiPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPolygon"]},{"name":"ST_Distance_MultiPolygon_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i32*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"tol_zero","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double"]},{"name":"ST_AsWkb__GeoLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoLineString"]},{"name":"rect_pixel_bin_packed","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i32","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"barray_append_impl","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<bool>","args":["Array<bool>","i8"]},{"name":"ST_Distance_Polygon_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_rotate60ccw","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"tol","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["i32","i32"]},{"name":"_geoAzDistanceRads","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","double","double","double*"]},{"name":"_ijkAdd","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32*","i32*"]},{"name":"ST_DWithin_Point_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"convert_meters_to_pixel_width","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i8*","i64","i32","i32","i32","double","double","i32","double"]},{"name":"reg_hex_vert_pixel_bin_y","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"reg_hex_vert_pixel_bin_x","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"ST_Contains_LineString_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"_faceIjkToBaseCellCCWrot60","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32*"]},{"name":"ST_Distance_MultiPoint_MultiLineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"power","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double"]},{"name":"ST_AsWkb__GeoMultiPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPolygon"]},{"name":"area_ring","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"reg_hex_vert_pixel_bin_packed","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i32","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"text_encoding_dict_concat3","annotations":[{},{},{"uses_manager":"true"}],"ret":"TextEncodingDict","args":["TextEncodingDict","TextEncodingDict"]},{"name":"Atanh","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"length_linestring","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i32","i32","i32","i1","i1"]},{"name":"Cos","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Sqrt","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"tol_le","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double"]},{"name":"Cot","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_DWithin_Point_Point_Geodesic","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_h3LeadingNonZeroDigit","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i64"]},{"name":"box_contains_box","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i64","double*","i64"]},{"name":"ST_DWithin_LineString_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"line_intersects_line","annotations":[{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double","double","double","double"]},{"name":"_faceIjkToBaseCell","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32*"]},{"name":"compression_unit_size","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"ST_Distance_MultiPoint_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Area_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i32","i8*","i32","i8*","i32","i32","i32","i32"]},{"name":"ST_Intersects_Polygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"centroid_add_segment","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double*","double*"]},{"name":"radsToDegs","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"text_encoding_dict_concat2","annotations":[{},{},{"uses_manager":"true"}],"ret":"TextEncodingDict","args":["TextEncodingNone","TextEncodingDict"]},{"name":"Tan","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"_h3RotatePent60cw","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"ST_Distance_MultiPoint_MultiPolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_faceIjkToGeo","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32","double*"]},{"name":"ln","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"_h3RotatePent60ccw","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"array_second_half__i8","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i8>","args":["Array<i8>"]},{"name":"array_first_half__i8","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i8>","args":["Array<i8>"]},{"name":"ST_Contains_MultiPolygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"rect_pixel_bin","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"float","args":["double","double","double","i32","i32"]},{"name":"ST_Distance_Point_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_AsWkb__GeoPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPoint"]},{"name":"distance_point_multipolygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Intersects_MultiPolygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","i32*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ct_device_selection_udf_any","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"ST_AsText__GeoMultiPolygon__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiPolygon"]},{"name":"ST_AsWkt__GeoLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoLineString"]},{"name":"_geoToVec3d","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","double*"]},{"name":"Ceil__2","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"Ceil__1","annotations":[{},{"uses_manager":"false"}],"ret":"i16","args":["i16"]},{"name":"array_second_half__f32","annotations":[{},{"uses_manager":"false"}],"ret":"Array<float>","args":["Array<float>"]},{"name":"Ceil__3","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"ST_Distance_Point_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_AsWkb__GeoMultiLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiLineString"]},{"name":"distance_point_line","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double","double","double"]},{"name":"ST_Centroid_Point","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"void","args":["i8*","i32","i32","i32","i32","double*"]},{"name":"_hex2dToCoordIJK","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["double*","i32*"]},{"name":"ST_Distance_MultiPolygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32*","i64","i32*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"Round2_to_digit","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i32"]},{"name":"ST_DWithin_Point_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"ST_Intersects_Polygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"on_segment","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double","double"]},{"name":"h3ToLon","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["i64"]},{"name":"ST_AsWkt__GeoPoint__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoPoint"]},{"name":"distance_in_meters","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double"]},{"name":"_baseCellIsCwOffset","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32","i32"]},{"name":"ST_DWithin_Polygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32","double"]},{"name":"text_encoding_none_length","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["TextEncodingNone"]},{"name":"_setIJK","annotations":[{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i32*","i32","i32","i32"]},{"name":"Atan2","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double"]},{"name":"Acos","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"array_equal__i64","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<i64>","Array<i64>"]},{"name":"ST_Y_Point","annotations":[{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i32","i32","i32"]},{"name":"_ijkMatches","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i32*","i32*"]},{"name":"Cosh","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"distance_point_polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"is_nan__","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["float"]},{"name":"ST_Contains_Polygon_LineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Intersects_Point_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"text_encoding_none_copy","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["TextEncodingNone"]},{"name":"Truncate","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i32"]},{"name":"text_encoding_dict_copy_from","annotations":[{},{},{},{"uses_manager":"true"}],"ret":"TextEncodingDict","args":["TextEncodingDict","TextEncodingDict","i32"]},{"name":"ST_cContains_Polygon_Point","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"radians","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ST_MaxDistance_LineString_Point","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"h3ToParent","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64","i32"]},{"name":"_h3Rotate60ccw","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]},{"name":"text_encoding_dict_copy","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingDict","args":["TextEncodingDict"]},{"name":"_ijkNormalize","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"Ceil__","annotations":[{},{"uses_manager":"false"}],"ret":"float","args":["float"]},{"name":"reg_hex_horiz_pixel_bin_packed","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i32","args":["double","double","double","double","double","double","double","double","double","double","i32","i32"]},{"name":"ST_Distance_Point_MultiLineString","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_ijkRotate60cw","annotations":[{},{"uses_manager":"false"}],"ret":"i1","args":["i32*"]},{"name":"array_equal__bool","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<bool>","Array<bool>"]},{"name":"ST_Distance_MultiPoint_MultiPoint_Squared","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"convert_meters_to_merc_pixel_height","annotations":[{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["double","double","double","double","double","i32","double"]},{"name":"Round","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double","i32"]},{"name":"ST_Intersects_Polygon_Polygon","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32*","i64","double*","i64","i32","i32","i32","i32","i32"]},{"name":"array_equal__i32","annotations":[{},{},{"uses_manager":"false"}],"ret":"i1","args":["Array<i32>","Array<i32>"]},{"name":"is_point_size_in_view","annotations":[{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32","double","double","double","double","double"]},{"name":"conv_4326_900913_x","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"array_first_half__i16","annotations":[{},{"uses_manager":"false"}],"ret":"Array<i16>","args":["Array<i16>"]},{"name":"Contains_Polygon_Point_Impl","annotations":[{},{},{},{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i64","i32*","i64","double*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"conv_4326_900913_y","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Atan","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"ct_device_selection_udf_cpu__cpu_","annotations":[{},{"uses_manager":"false"}],"ret":"i32","args":["i32"]},{"name":"Floor","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"orientation","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i16","args":["double","double","double","double","double","double"]},{"name":"Truncate__1","annotations":[{},{},{"uses_manager":"false"}],"ret":"i16","args":["i16","i32"]},{"name":"ST_Distance_Point_Point","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"Truncate__2","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i32","i32"]},{"name":"is_left","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64","i64","i64","i64","i64","i64"]},{"name":"Truncate__3","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64","i32"]},{"name":"is_point_in_merc_view","annotations":[{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["double","double","double","double","double","double"]},{"name":"degsToRads","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Tan__","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["float"]},{"name":"ST_AsBinary__GeoMultiLineString__cpu_","annotations":[{},{"uses_manager":"true"}],"ret":"TextEncodingNone","args":["GeoMultiLineString"]},{"name":"polygon_contains_linestring","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"i1","args":["i8*","i32","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"ST_Distance_LineString_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"raw_array_as_array_same_type","annotations":[{},{},{"uses_manager":"false"}],"ret":"Array<i64>","args":["i64*","i64"]},{"name":"ST_Distance_MultiPoint_MultiPoint","annotations":[{},{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32","double"]},{"name":"_geoAzimuthRads","annotations":[{},{},{"uses_manager":"false"}],"ret":"double","args":["double*","double*"]},{"name":"strtok_to_array","annotations":[{},{},{"uses_manager":"true"}],"ret":"Array<TextEncodingDict>","args":["TextEncodingNone","TextEncodingNone"]},{"name":"pi","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":[]},{"name":"Round__1","annotations":[{},{},{"uses_manager":"false"}],"ret":"i16","args":["i16","i32"]},{"name":"ST_Distance_Point_Point_Squared","annotations":[{},{},{},{},{},{},{},{},{},{"uses_manager":"false"}],"ret":"double","args":["i8*","i64","i8*","i64","i32","i32","i32","i32","i32"]},{"name":"Exp","annotations":[{},{"uses_manager":"false"}],"ret":"double","args":["double"]},{"name":"Round__2","annotations":[{},{},{"uses_manager":"false"}],"ret":"i32","args":["i32","i32"]},{"name":"Round__3","annotations":[{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64","i32"]},{"name":"Round__4","annotations":[{},{},{},{"uses_manager":"false"}],"ret":"i64","args":["i64","i32","i32"]},{"name":"_h3Rotate60cw","annotations":[{},{"uses_manager":"false"}],"ret":"i64","args":["i64"]}]
2025-04-19T00:17:53.787247 I 38833 0 0 DBHandler.cpp:527 Started in GPU mode.
2025-04-19T00:17:53.787835 2 38833 0 0 SysCatalog.cpp:251 reloading catalog caches for: system_catalog
2025-04-19T00:17:53.787925 I 38833 0 0 QueryEngine.h:47 Query Engine CUDA streams disabled
2025-04-19T00:17:53.787937 I 38833 0 0 DBHandler.cpp:567 Overriding default geos library with 'libgeos_c.so'
2025-04-19T00:17:53.788057 I 38833 0 0 HeavyDB.cpp:552  HeavyDB server using unencrypted connection
2025-04-19T00:18:02.611644 I 38833 1 1 DBHandler.cpp:659 stdlog_begin connect 0 0     
2025-04-19T00:18:02.784426 I 38833 1 1 DBHandler.cpp:701 User admin connected to database heavyai
2025-04-19T00:18:02.784457 I 38833 1 1 DBHandler.cpp:659 stdlog connect 0 172 heavyai admin 802-W3im {"client","roles"} {"tcp:localhost:34310","super"}
2025-04-19T00:18:02.784603 1 38833 2 1 DBHandler.cpp:960 stdlog_begin get_session_info 1 0 heavyai admin 802-W3im  
2025-04-19T00:18:02.784618 I 38833 2 1 DBHandler.cpp:960 stdlog get_session_info 1 0 heavyai admin 802-W3im {"client"} {"tcp:localhost:34310"}
2025-04-19T00:18:05.697658 I 38833 3 1 DBHandler.cpp:1300 stdlog_begin sql_execute 2 0 heavyai admin 802-W3im {"query_str"} {"select  dt.d_year ,item.i_brand_id brand_id ,item.i_brand brand ,sum(ss_sales_price) sum_agg from  date_dim dt ,store_sales ,item where dt.d_date_sk = store_sales.ss_sold_date_sk and store_sales.ss_item_sk = item.i_item_sk and item.i_manufact_id = 816 and dt.d_moy=11 group by dt.d_year ,item.i_brand ,item.i_brand_id order by dt.d_year ,sum_agg desc ,brand_id limit 100;"}
2025-04-19T00:18:05.697700 1 38833 3 1 DBHandler.cpp:1205 query type: READ
2025-04-19T00:18:05.698445 I 38833 3 1 Calcite.cpp:566 User calcite catalog heavyai sql 'select  dt.d_year ,item.i_brand_id brand_id ,item.i_brand brand ,sum(ss_sales_price) sum_agg from  date_dim dt ,store_sales ,item where dt.d_date_sk = store_sales.ss_sold_date_sk and store_sales.ss_item_sk = item.i_item_sk and item.i_manufact_id = 816 and dt.d_moy=11 group by dt.d_year ,item.i_brand ,item.i_brand_id order by dt.d_year ,sum_agg desc ,brand_id limit 100;'
2025-04-19T00:18:05.724165 1 38833 3 2 DBHandler.cpp:3056 stdlog_begin get_databases 3 0 heavyai calcite 805-DDBl  
2025-04-19T00:18:05.724325 I 38833 3 2 DBHandler.cpp:3056 stdlog get_databases 3 0 heavyai calcite 805-DDBl {"client"} {"tcp:localhost:34316"}
2025-04-19T00:18:06.196139 1 38833 3 3 DBHandler.cpp:2703 stdlog_begin get_tables_for_database 4 0 heavyai calcite 805-DDBl  
2025-04-19T00:18:06.196191 I 38833 3 3 DBHandler.cpp:2703 stdlog get_tables_for_database 4 0 heavyai calcite 805-DDBl {"client"} {"tcp:localhost:34322"}
2025-04-19T00:18:06.198710 1 38833 3 4 DBHandler.cpp:2426 stdlog_begin get_internal_table_details_for_database 5 0 heavyai calcite 805-DDBl {"table_name"} {"date_dim"}
2025-04-19T00:18:06.198727 1 38833 3 4 LockMgr.h:128 Acquiring Table Schema Read Lock for table: date_dim
2025-04-19T00:18:06.198851 I 38833 3 4 DBHandler.cpp:2426 stdlog get_internal_table_details_for_database 5 0 heavyai calcite 805-DDBl {"table_name","client"} {"date_dim","tcp:localhost:34326"}
2025-04-19T00:18:06.215133 1 38833 3 5 DBHandler.cpp:2426 stdlog_begin get_internal_table_details_for_database 6 0 heavyai calcite 805-DDBl {"table_name"} {"store_sales"}
2025-04-19T00:18:06.215160 1 38833 3 5 LockMgr.h:128 Acquiring Table Schema Read Lock for table: store_sales
2025-04-19T00:18:06.215238 I 38833 3 5 DBHandler.cpp:2426 stdlog get_internal_table_details_for_database 6 0 heavyai calcite 805-DDBl {"table_name","client"} {"store_sales","tcp:localhost:34340"}
2025-04-19T00:18:06.216882 1 38833 3 6 DBHandler.cpp:2426 stdlog_begin get_internal_table_details_for_database 7 0 heavyai calcite 805-DDBl {"table_name"} {"item"}
2025-04-19T00:18:06.216898 1 38833 3 6 LockMgr.h:128 Acquiring Table Schema Read Lock for table: item
2025-04-19T00:18:06.216948 I 38833 3 6 DBHandler.cpp:2426 stdlog get_internal_table_details_for_database 7 0 heavyai calcite 805-DDBl {"table_name","client"} {"item","tcp:localhost:34348"}
2025-04-19T00:18:06.476931 I 38833 3 1 Calcite.cpp:599 Time in Thrift 9 (ms), Time in Java Calcite server 769 (ms)
2025-04-19T00:18:06.477123 1 38833 3 1 LockMgr.h:128 Acquiring Table Schema Read Lock for table: date_dim
2025-04-19T00:18:06.477421 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,1,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477440 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,2,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477449 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,3,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477457 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,4,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477464 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,5,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477471 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,6,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477477 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,7,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477485 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,8,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477497 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,1,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477519 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,2,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477505 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,9,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477540 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,10,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477548 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,11,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477529 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,3,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477556 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,12,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477562 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,4,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477563 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,13,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477572 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,5,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477579 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,14,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477582 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,6,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477587 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,15,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477590 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,7,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477605 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,8,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477594 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,16,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477613 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,9,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477615 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,17,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477620 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,10,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477622 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,18,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477628 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,11,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477630 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,19,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477636 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,12,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477638 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,20,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477644 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,13,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477653 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,14,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477660 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,15,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477645 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,21,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477668 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,16,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477670 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,22,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477676 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,17,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477688 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,18,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477695 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,19,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477679 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,23,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477703 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,20,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477705 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,24,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477710 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,21,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477712 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,25,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477718 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,22,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477719 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,26,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477725 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,23,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477727 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,27,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477732 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,24,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477741 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,25,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477748 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,26,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477734 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,8,28,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.477756 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,27,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.477763 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,8,28,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.478080 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 0.2097152 Chunk key: 1,8,30,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.482666 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 1.4096 Chunk key: 1,8,30,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.482719 I 38833 3 1 FileMgr.cpp:241 Completed Reading table's file metadata, Elapsed time : 5ms Epoch: 1 files read: 2 table location: '/var/lib/heavyai/storage/data/table_1_8'
2025-04-19T00:18:06.482740 3 38833 3 1 FileMgr.cpp:280 Number of Headers in Vector: 58
2025-04-19T00:18:06.482940 I 38833 3 1 Catalog.cpp:1917 Instantiating Fragmenter for table date_dim took 5ms
2025-04-19T00:18:06.482954 1 38833 3 1 LockMgr.h:217 Acquiring Table Data Read Lock for table: date_dim
2025-04-19T00:18:06.482972 1 38833 3 1 LockMgr.h:128 Acquiring Table Schema Read Lock for table: item
2025-04-19T00:18:06.483175 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,1,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483189 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,2,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483197 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,3,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483204 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,4,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483204 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,1,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483223 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,2,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483231 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,3,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483239 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,4,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483246 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,5,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483213 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,5,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483253 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,6,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483260 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,6,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483270 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,7,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483278 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,8,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483285 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,9,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483292 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,10,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483299 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,11,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483306 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,12,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483312 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,13,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483261 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,7,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483320 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,14,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483326 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,8,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483328 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,15,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483333 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,9,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483335 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,16,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483339 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,10,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483346 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,11,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483348 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,17,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483352 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,12,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483355 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,18,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483368 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,19,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483377 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,20,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483383 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,21,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483358 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,13,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483400 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,14,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483407 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,15,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483391 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,12,22,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.483413 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,16,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483419 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,17,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483426 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,18,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483432 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,19,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483438 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,20,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483443 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,21,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483450 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,12,22,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.483760 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 0.2097152 Chunk key: 1,12,24,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488425 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 1.4096 Chunk key: 1,12,24,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488468 I 38833 3 1 FileMgr.cpp:241 Completed Reading table's file metadata, Elapsed time : 5ms Epoch: 1 files read: 2 table location: '/var/lib/heavyai/storage/data/table_1_12'
2025-04-19T00:18:06.488486 3 38833 3 1 FileMgr.cpp:280 Number of Headers in Vector: 46
2025-04-19T00:18:06.488615 I 38833 3 1 Catalog.cpp:1917 Instantiating Fragmenter for table item took 5ms
2025-04-19T00:18:06.488625 1 38833 3 1 LockMgr.h:217 Acquiring Table Data Read Lock for table: item
2025-04-19T00:18:06.488640 1 38833 3 1 LockMgr.h:128 Acquiring Table Schema Read Lock for table: store_sales
2025-04-19T00:18:06.488846 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,1,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488860 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,2,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488867 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,3,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488877 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488882 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,4,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488891 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488897 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,5,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488899 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488903 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,6,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488907 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488909 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,7,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488914 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,8,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488914 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488921 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,9,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488931 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,10,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488923 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488938 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,11,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488942 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488951 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488943 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,12,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488959 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488965 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,13,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488968 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488971 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,14,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488976 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488977 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,15,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488984 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488987 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,16,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488991 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.488999 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,17,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489007 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,18,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489014 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,19,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.488999 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489020 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,20,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489024 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489027 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,21,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489031 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489032 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,22,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489040 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489044 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 1.4096 Chunk key: 1,18,23,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.489048 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489055 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489062 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489069 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489077 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489084 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489092 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,25,0, Page id: 0 Epoch: 1
2025-04-19T00:18:06.489099 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489106 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489120 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489127 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489135 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489141 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489149 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489156 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489166 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489174 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489181 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489188 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489196 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489203 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489210 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489217 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489225 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489233 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489240 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489247 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489254 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489261 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489268 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489276 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489283 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489291 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489298 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489305 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489312 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489319 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489326 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489334 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489342 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489349 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489356 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489363 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489370 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489381 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489389 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489396 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489409 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489416 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489423 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489430 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489437 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489445 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 2 Epoch: 1
2025-04-19T00:18:06.489452 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489459 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489467 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489474 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489482 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489489 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489496 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489503 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489511 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489517 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489525 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489532 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489539 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489546 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489554 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489561 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489568 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489576 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489583 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489590 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489597 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489604 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489612 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 3 Epoch: 1
2025-04-19T00:18:06.489619 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489626 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489633 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489643 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489650 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489657 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489663 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489669 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489675 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489681 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489687 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489693 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489699 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489705 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489711 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489717 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489723 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489729 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489735 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489741 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489748 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489754 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489760 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 4 Epoch: 1
2025-04-19T00:18:06.489766 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,25,0, Page id: 1 Epoch: 1
2025-04-19T00:18:06.489780 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,1,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489790 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,2,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489796 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,3,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489801 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,4,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489807 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,5,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489813 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,6,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489821 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,7,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489827 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,8,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489833 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,9,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489839 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,10,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489845 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,11,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489856 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,12,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489862 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,13,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489868 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,14,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489877 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,15,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489883 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,16,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489889 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,17,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489895 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,18,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489901 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,19,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489908 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,20,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489913 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,21,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.489920 4 38833 0 0 FileInfo.cpp:121 FId.PSz: 0.2097152 Chunk key: 1,18,22,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.490092 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 0.2097152 Chunk key: 1,18,23,0, Page id: 5 Epoch: 1
2025-04-19T00:18:06.494234 4 38833 0 0 FileInfo.cpp:165 FId.PSz: 1.4096 Chunk key: 1,18,25,0, Page id: -1 Epoch: 1
2025-04-19T00:18:06.494309 I 38833 3 1 FileMgr.cpp:241 Completed Reading table's file metadata, Elapsed time : 5ms Epoch: 1 files read: 2 table location: '/var/lib/heavyai/storage/data/table_1_18'
2025-04-19T00:18:06.494339 3 38833 3 1 FileMgr.cpp:280 Number of Headers in Vector: 164
2025-04-19T00:18:06.494576 I 38833 3 1 Catalog.cpp:1917 Instantiating Fragmenter for table store_sales took 5ms
2025-04-19T00:18:06.494585 1 38833 3 1 LockMgr.h:217 Acquiring Table Data Read Lock for table: store_sales
2025-04-19T00:18:06.494680 W 38833 3 1 CudaMgr.cpp:604 Could not find CUDA installation path: environment variables CUDA_HOME or CUDA_DIR are not defined
2025-04-19T00:18:06.494796 W 38833 3 1 Execute.cpp:313 File /libdevice.10.bc does not exist; support for some UDF functions might not be available.
2025-04-19T00:18:06.505915 W 38833 3 1 Execute.cpp:400 Source of rt_libdevice_module LLVM module is unavailable. The module will be unavailable.
2025-04-19T00:18:06.505952 I 38833 3 1 QueryDispatchQueue.h:63 Dispatching query with 0 queries in the queue.
2025-04-19T00:18:06.506002 I 38833 0 0 QueryDispatchQueue.h:100 Worker 2 running query and returning control. There are now 1 workers are running and 0 queries in the queue.
2025-04-19T00:18:06.506034 1 38833 3 7 DBHandler.cpp:6167 Table Schema Locks:
1 8 
1 12 
1 18 
2025-04-19T00:18:06.506042 1 38833 3 7 DBHandler.cpp:6168 Table Data Locks:
1 8 
1 12 
1 18 
2025-04-19T00:18:06.516424 W 38833 3 7 Execute.cpp:400 Source of rt_libdevice_module LLVM module is unavailable. The module will be unavailable.
2025-04-19T00:18:06.516473 2 38833 3 7 RelAlgDag.cpp:3339 Parsing query RA JSON: {
  "rels": [
    {
      "id": "0",
      "relOp": "LogicalTableScan",
      "fieldNames": [
        "d_date_sk",
        "d_date_id",
        "d_date",
        "d_month_seq",
        "d_week_seq",
        "d_quarter_seq",
        "d_year",
        "d_dow",
        "d_moy",
        "d_dom",
        "d_qoy",
        "d_fy_year",
        "d_fy_quarter_seq",
        "d_fy_week_seq",
        "d_day_name",
        "d_quarter_name",
        "d_holiday",
        "d_weekend",
        "d_following_holiday",
        "d_first_dom",
        "d_last_dom",
        "d_same_day_ly",
        "d_same_day_lq",
        "d_current_day",
        "d_current_week",
        "d_current_month",
        "d_current_quarter",
        "d_current_year",
        "rowid"
      ],
      "table": [
        "heavyai",
        "date_dim"
      ],
      "inputs": []
    },
    {
      "id": "1",
      "relOp": "LogicalTableScan",
      "fieldNames": [
        "ss_sold_date_sk",
        "ss_sold_time_sk",
        "ss_item_sk",
        "ss_customer_sk",
        "ss_cdemo_sk",
        "ss_hdemo_sk",
        "ss_addr_sk",
        "ss_store_sk",
        "ss_promo_sk",
        "ss_ticket_number",
        "ss_quantity",
        "ss_wholesale_cost",
        "ss_list_price",
        "ss_sales_price",
        "ss_ext_discount_amt",
        "ss_ext_sales_price",
        "ss_ext_wholesale_cost",
        "ss_ext_list_price",
        "ss_ext_tax",
        "ss_coupon_amt",
        "ss_net_paid",
        "ss_net_paid_inc_tax",
        "ss_net_profit",
        "rowid"
      ],
      "table": [
        "heavyai",
        "store_sales"
      ],
      "inputs": []
    },
    {
      "id": "2",
      "relOp": "LogicalJoin",
      "condition": {
        "literal": true,
        "type": "BOOLEAN",
        "target_type": "BOOLEAN",
        "scale": -2147483648,
        "precision": 1,
        "type_scale": -2147483648,
        "type_precision": 1
      },
      "joinType": "inner",
      "inputs": [
        "0",
        "1"
      ]
    },
    {
      "id": "3",
      "relOp": "LogicalTableScan",
      "fieldNames": [
        "i_item_sk",
        "i_item_id",
        "i_rec_start_date",
        "i_rec_end_date",
        "i_item_desc",
        "i_current_price",
        "i_wholesale_cost",
        "i_brand_id",
        "i_brand",
        "i_class_id",
        "i_class",
        "i_category_id",
        "i_category",
        "i_manufact_id",
        "i_manufact",
        "i_size",
        "i_formulation",
        "i_color",
        "i_units",
        "i_container",
        "i_manager_id",
        "i_product_name",
        "rowid"
      ],
      "table": [
        "heavyai",
        "item"
      ],
      "inputs": []
    },
    {
      "id": "4",
      "relOp": "LogicalJoin",
      "condition": {
        "literal": true,
        "type": "BOOLEAN",
        "target_type": "BOOLEAN",
        "scale": -2147483648,
        "precision": 1,
        "type_scale": -2147483648,
        "type_precision": 1
      },
      "joinType": "inner",
      "inputs": [
        "2",
        "3"
      ]
    },
    {
      "id": "5",
      "relOp": "LogicalFilter",
      "condition": {
        "op": "AND",
        "operands": [
          {
            "op": "=",
            "operands": [
              {
                "input": 0
              },
              {
                "input": 29
              }
            ],
            "type": {
              "type": "BOOLEAN",
              "nullable": true
            }
          },
          {
            "op": "=",
            "operands": [
              {
                "input": 31
              },
              {
                "input": 53
              }
            ],
            "type": {
              "type": "BOOLEAN",
              "nullable": true
            }
          },
          {
            "op": "=",
            "operands": [
              {
                "input": 66
              },
              {
                "literal": 816,
                "type": "DECIMAL",
                "target_type": "INTEGER",
                "scale": 0,
                "precision": 3,
                "type_scale": 0,
                "type_precision": 10
              }
            ],
            "type": {
              "type": "BOOLEAN",
              "nullable": true
            }
          },
          {
            "op": "=",
            "operands": [
              {
                "input": 8
              },
              {
                "literal": 11,
                "type": "DECIMAL",
                "target_type": "INTEGER",
                "scale": 0,
                "precision": 2,
                "type_scale": 0,
                "type_precision": 10
              }
            ],
            "type": {
              "type": "BOOLEAN",
              "nullable": true
            }
          }
        ],
        "type": {
          "type": "BOOLEAN",
          "nullable": true
        }
      }
    },
    {
      "id": "6",
      "relOp": "LogicalProject",
      "fields": [
        "d_year",
        "brand",
        "brand_id",
        "ss_sales_price"
      ],
      "exprs": [
        {
          "input": 6
        },
        {
          "input": 61
        },
        {
          "input": 60
        },
        {
          "input": 42
        }
      ]
    },
    {
      "id": "7",
      "relOp": "LogicalAggregate",
      "fields": [
        "d_year",
        "brand",
        "brand_id",
        "sum_agg"
      ],
      "group": [
        0,
        1,
        2
      ],
      "aggs": [
        {
          "agg": "SUM",
          "type": {
            "type": "DECIMAL",
            "nullable": true,
            "precision": 19,
            "scale": 2
          },
          "distinct": false,
          "operands": [
            3
          ]
        }
      ]
    },
    {
      "id": "8",
      "relOp": "LogicalProject",
      "fields": [
        "d_year",
        "brand_id",
        "brand",
        "sum_agg"
      ],
      "exprs": [
        {
          "input": 0
        },
        {
          "input": 2
        },
        {
          "input": 1
        },
        {
          "input": 3
        }
      ]
    },
    {
      "id": "9",
      "relOp": "LogicalSort",
      "collation": [
        {
          "field": 0,
          "direction": "ASCENDING",
          "nulls": "LAST"
        },
        {
          "field": 3,
          "direction": "DESCENDING",
          "nulls": "FIRST"
        },
        {
          "field": 1,
          "direction": "ASCENDING",
          "nulls": "LAST"
        }
      ],
      "fetch": {
        "literal": 100,
        "type": "DECIMAL",
        "target_type": "INTEGER",
        "scale": 0,
        "precision": 3,
        "type_scale": 0,
        "type_precision": 10
      }
    }
  ]
}
2025-04-19T00:18:06.516685 I 38833 3 7 measure.h:77 Timer start                  executeRelAlgQuery                  executeRelAlgQuery:  573
2025-04-19T00:18:06.516696 I 38833 3 7 measure.h:77 Timer start           executeRelAlgQueryNoRetry           executeRelAlgQueryNoRetry:  612
2025-04-19T00:18:06.516997 1 38833 3 7 StringDictionary.cpp:235 Opened string dictionary /var/lib/heavyai/storage/data/DB_1_DICT_61 # Strings: 712 Hash table size: 2048 Fill rate: 34.7656% Collisions: 1195
2025-04-19T00:18:06.517015 I 38833 3 7 Catalog.cpp:2035 Time to load Dictionary 1_61 was 0ms
2025-04-19T00:18:06.517102 I 38833 3 7 measure.h:77 Timer start                    executeRelAlgSeq                    executeRelAlgSeq:  895
2025-04-19T00:18:06.517111 1 38833 3 7 RelAlgExecutor.cpp:945 Executing query step 0 / 0
2025-04-19T00:18:06.517117 I 38833 3 7 measure.h:77 Timer start                   executeRelAlgStep                   executeRelAlgStep: 1154
2025-04-19T00:18:06.517146 3 38833 3 7 RelAlgExecutor.cpp:1684 used_inputs.size() = 4
2025-04-19T00:18:06.517152 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=0 source_used_inputs.size()=4
2025-04-19T00:18:06.517178 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=4 source_used_inputs.size()=6
2025-04-19T00:18:06.517195 3 38833 3 7 RelAlgExecutor.cpp:4495 input_descs=(InputDescriptor(db_id(1), table_id(8),nest_level(0)) InputDescriptor(db_id(1), table_id(18),nest_level(1)) InputDescriptor(db_id(1), table_id(12),nest_level(2)))
2025-04-19T00:18:06.517200 3 38833 3 7 RelAlgExecutor.cpp:4496 input_col_descs=(InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(8),nest_level(0))) InputColDescriptor(col_id(7),InputDescriptor(db_id(1), table_id(8),nest_level(0))) InputColDescriptor(col_id(9),InputDescriptor(db_id(1), table_id(8),nest_level(0))) InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(18),nest_level(1))) InputColDescriptor(col_id(3),InputDescriptor(db_id(1), table_id(18),nest_level(1))) InputColDescriptor(col_id(14),InputDescriptor(db_id(1), table_id(18),nest_level(1))) InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(8),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(9),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(14),InputDescriptor(db_id(1), table_id(12),nest_level(2))))
2025-04-19T00:18:06.517270 2 38833 3 7 FromTableReordering.cpp:508 Table reordering starting with nest level 1
2025-04-19T00:18:06.517276 2 38833 3 7 FromTableReordering.cpp:529 Table reordering picked start nest level 1 with cost 100
2025-04-19T00:18:06.517281 1 38833 3 7 FromTableReordering.cpp:539 Insert input permutation, idx: 0, nest_level: 1
2025-04-19T00:18:06.517286 1 38833 3 7 FromTableReordering.cpp:539 Insert input permutation, idx: 1, nest_level: 0
2025-04-19T00:18:06.517290 1 38833 3 7 FromTableReordering.cpp:539 Insert input permutation, idx: 2, nest_level: 2
2025-04-19T00:18:06.517296 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(store_sales, ["ss_sold_date_sk", "ss_sold_time_sk", "ss_item_sk", "ss_customer_sk", "ss_cdemo_sk", "ss_hdemo_sk", "ss_addr_sk", "ss_store_sk", "ss_promo_sk", "ss_ticket_number", "ss_quantity", "ss_wholesale_cost", "ss_list_price", "ss_sales_price", "ss_ext_discount_amt", "ss_ext_sales_price", "ss_ext_wholesale_cost", "ss_ext_list_price", "ss_ext_tax", "ss_coupon_amt", "ss_net_paid", "ss_net_paid_inc_tax", "ss_net_profit", "rowid"]) to nest level 0
2025-04-19T00:18:06.517303 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(date_dim, ["d_date_sk", "d_date_id", "d_date", "d_month_seq", "d_week_seq", "d_quarter_seq", "d_year", "d_dow", "d_moy", "d_dom", "d_qoy", "d_fy_year", "d_fy_quarter_seq", "d_fy_week_seq", "d_day_name", "d_quarter_name", "d_holiday", "d_weekend", "d_following_holiday", "d_first_dom", "d_last_dom", "d_same_day_ly", "d_same_day_lq", "d_current_day", "d_current_week", "d_current_month", "d_current_quarter", "d_current_year", "rowid"]) to nest level 1
2025-04-19T00:18:06.517310 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(item, ["i_item_sk", "i_item_id", "i_rec_start_date", "i_rec_end_date", "i_item_desc", "i_current_price", "i_wholesale_cost", "i_brand_id", "i_brand", "i_class_id", "i_class", "i_category_id", "i_category", "i_manufact_id", "i_manufact", "i_size", "i_formulation", "i_color", "i_units", "i_container", "i_manager_id", "i_product_name", "rowid"]) to nest level 2
2025-04-19T00:18:06.517318 3 38833 3 7 RelAlgExecutor.cpp:1684 used_inputs.size() = 4
2025-04-19T00:18:06.517322 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=0 source_used_inputs.size()=4
2025-04-19T00:18:06.517340 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=4 source_used_inputs.size()=6
2025-04-19T00:18:06.517355 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(store_sales, ["ss_sold_date_sk", "ss_sold_time_sk", "ss_item_sk", "ss_customer_sk", "ss_cdemo_sk", "ss_hdemo_sk", "ss_addr_sk", "ss_store_sk", "ss_promo_sk", "ss_ticket_number", "ss_quantity", "ss_wholesale_cost", "ss_list_price", "ss_sales_price", "ss_ext_discount_amt", "ss_ext_sales_price", "ss_ext_wholesale_cost", "ss_ext_list_price", "ss_ext_tax", "ss_coupon_amt", "ss_net_paid", "ss_net_paid_inc_tax", "ss_net_profit", "rowid"]) to nest level 0
2025-04-19T00:18:06.517365 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(date_dim, ["d_date_sk", "d_date_id", "d_date", "d_month_seq", "d_week_seq", "d_quarter_seq", "d_year", "d_dow", "d_moy", "d_dom", "d_qoy", "d_fy_year", "d_fy_quarter_seq", "d_fy_week_seq", "d_day_name", "d_quarter_name", "d_holiday", "d_weekend", "d_following_holiday", "d_first_dom", "d_last_dom", "d_same_day_ly", "d_same_day_lq", "d_current_day", "d_current_week", "d_current_month", "d_current_quarter", "d_current_year", "rowid"]) to nest level 1
2025-04-19T00:18:06.517372 1 38833 3 7 RelAlgExecutor.cpp:1544 Assigned input RelScan(item, ["i_item_sk", "i_item_id", "i_rec_start_date", "i_rec_end_date", "i_item_desc", "i_current_price", "i_wholesale_cost", "i_brand_id", "i_brand", "i_class_id", "i_class", "i_category_id", "i_category", "i_manufact_id", "i_manufact", "i_size", "i_formulation", "i_color", "i_units", "i_container", "i_manager_id", "i_product_name", "rowid"]) to nest level 2
2025-04-19T00:18:06.517379 3 38833 3 7 RelAlgExecutor.cpp:1684 used_inputs.size() = 4
2025-04-19T00:18:06.517384 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=0 source_used_inputs.size()=4
2025-04-19T00:18:06.517399 3 38833 3 7 RelAlgExecutor.cpp:1602 ra_node=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 input_col_descs_unique.size()=4 source_used_inputs.size()=6
2025-04-19T00:18:06.517425 3 38833 3 7 RelAlgExecutor.cpp:1755 get_scalar_sources_size(RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1) = 7
2025-04-19T00:18:06.517543 2 38833 3 7 QueryPlanDagExtractor.cpp:368 Add hashtable access path, inner join col info: 12609104892296541166 (access path: 3|), outer join col info: 1761204074510969970 (access path: 4|)
2025-04-19T00:18:06.517572 2 38833 3 7 QueryPlanDagExtractor.cpp:368 Add hashtable access path, inner join col info: 9905087403685273379 (access path: 5|), outer join col info: 4780954258992277811 (access path: 4|)
2025-04-19T00:18:06.517595 I 38833 3 7 measure.h:77 Timer start                     executeWorkUnit                     executeWorkUnit: 3651
2025-04-19T00:18:06.517608 3 38833 3 7 RelAlgExecutor.cpp:3692 body->getId()=11 body->toString()=RelCompound, filter_expr=null, target_exprs=RexRef(1) RexRef(3) RexRef(2) RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , agg_exps=RexAgg(agg=3, distinct=0, type=DECIMAL(19,2), operands=[3]) , scalar_sources=RexInput(date_dim.d_year) RexInput(item.i_brand) RexInput(item.i_brand_id) RexInput(store_sales.ss_sales_price) RexRef(1) RexRef(2) RexRef(3) , 3, , fields=["d_year", "brand_id", "brand", "sum_agg"], is_agg=1 it==leaf_results_.end()=true
2025-04-19T00:18:06.517666 1 38833 3 7 RelAlgExecutor.cpp:3902 Use default cardinality for max_groups_buffer_entry_guess: 16384
2025-04-19T00:18:06.517671 1 38833 3 7 Execute.cpp:2026 Executor 2 is executing work unit:
	Extracted Query Plan Dag Hash: 1692648726423179076
	Table/Col/Levels: ((db_id: 1, table_id: 18), 1, 0) ((db_id: 1, table_id: 18), 3, 0) ((db_id: 1, table_id: 18), 14, 0) ((db_id: 1, table_id: 8), 1, 1) ((db_id: 1, table_id: 8), 7, 1) ((db_id: 1, table_id: 8), 9, 1) ((db_id: 1, table_id: 12), 1, 2) ((db_id: 1, table_id: 12), 8, 2) ((db_id: 1, table_id: 12), 9, 2) ((db_id: 1, table_id: 12), 14, 2) 
	Join Quals: 		0 INNER(= (ColumnVar (db_id: 1, table_id: 8, column_id: 1), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 18, column_id: 1), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 8, column_id: 9), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 11) ) 		1 INNER(= (ColumnVar (db_id: 1, table_id: 18, column_id: 3), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 12, column_id: 1), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 12, column_id: 14), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 816) ) 
	Group By: (ColumnVar (db_id: 1, table_id: 8, column_id: 7), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) , (ColumnVar (db_id: 1, table_id: 12, column_id: 9), rte: 2 TEXT, type: (type=TEXT, dimension=0, scale=0, null=nullable, compression_name=DICT, comp_param=61, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 1, string_dict_id: 61), uses_flatbuffer=0)) , (ColumnVar (db_id: 1, table_id: 12, column_id: 8), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) 
	Projected targets: (Var (db_id: 1, table_id: 8, column_id: 7), rte: 1, which_row: 3, varno: 1) , (Var (db_id: 1, table_id: 12, column_id: 8), rte: 2, which_row: 3, varno: 3) , (Var (db_id: 1, table_id: 12, column_id: 9), rte: 2, which_row: 3, varno: 2) , (SUM (ColumnVar (db_id: 1, table_id: 18, column_id: 14), rte: 0 DECIMAL(7,2), type: (type=DECIMAL, dimension=7, scale=2, null=nullable, compression_name=FIXED, comp_param=32, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) 
	Has Estimator: True
	Sort Info: 
	  Order Entries: 1 , 4 desc nulls first , 2 
	  Algorithm: Speculative Top N
	  Limit: 100
	  Offset: 0
	Scan Limit: 0
	Bump Allocator: False
2025-04-19T00:18:06.517701 I 38833 3 7 measure.h:77 Timer start                Exec_executeWorkUnit                 executeWorkUnitImpl: 2095
2025-04-19T00:18:06.517722 I 38833 3 7 measure.h:77 Timer start              query_step_compilation                 executeWorkUnitImpl: 2121
2025-04-19T00:18:06.517851 I 38833 3 7 measure.h:84 Timer end                query_step_compilation                 executeWorkUnitImpl: 2121 elapsed 0 ms
2025-04-19T00:18:06.517864 I 38833 3 7 measure.h:84 Timer end                  Exec_executeWorkUnit                 executeWorkUnitImpl: 2095 elapsed 0 ms
2025-04-19T00:18:06.517885 1 38833 3 7 Execute.cpp:2026 Executor 2 is executing work unit:
	Extracted Query Plan Dag Hash: 1692648726423179076
	Table/Col/Levels: ((db_id: 1, table_id: 18), 1, 0) ((db_id: 1, table_id: 18), 3, 0) ((db_id: 1, table_id: 18), 14, 0) ((db_id: 1, table_id: 8), 1, 1) ((db_id: 1, table_id: 8), 7, 1) ((db_id: 1, table_id: 8), 9, 1) ((db_id: 1, table_id: 12), 1, 2) ((db_id: 1, table_id: 12), 8, 2) ((db_id: 1, table_id: 12), 9, 2) ((db_id: 1, table_id: 12), 14, 2) 
	Join Quals: 		0 INNER(= (ColumnVar (db_id: 1, table_id: 8, column_id: 1), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 18, column_id: 1), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 8, column_id: 9), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 11) ) 		1 INNER(= (ColumnVar (db_id: 1, table_id: 18, column_id: 3), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 12, column_id: 1), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 12, column_id: 14), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 816) ) 
	Projected targets: 
	Has Estimator: False
	Sort Info: 
	  Order Entries: 
	  Algorithm: ResultSet
	  Limit: N/A
	  Offset: 0
	Scan Limit: 0
	Bump Allocator: False
2025-04-19T00:18:06.517904 I 38833 3 7 measure.h:77 Timer start                Exec_executeWorkUnit                 executeWorkUnitImpl: 2095
2025-04-19T00:18:06.517913 I 38833 3 7 measure.h:77 Timer start              query_step_compilation                 executeWorkUnitImpl: 2121
2025-04-19T00:18:06.518979 I 38833 3 7 measure.h:77 Timer start                      buildJoinLoops                      buildJoinLoops:  611
2025-04-19T00:18:06.518999 1 38833 3 7 HashJoin.cpp:338 Trying to build perfect hash table:
2025-04-19T00:18:06.519238 1 38833 3 7 CudaMgr.cpp:35 CUDA Error (2): out of memory
2025-04-19T00:18:06.519248 1 38833 3 7 CudaMgr.cpp:36  0# CudaMgr_Namespace::CudaErrorException::CudaErrorException(cudaError_enum) in /opt/heavyai/bin/heavydb
 1# 0x0000000001CE9716 in /opt/heavyai/bin/heavydb
 2# Buffer_Namespace::GpuCudaBufferMgr::addSlab(unsigned long) in /opt/heavyai/bin/heavydb
 3# Buffer_Namespace::BufferMgr::findFreeBuffer(unsigned long) in /opt/heavyai/bin/heavydb
 4# Buffer_Namespace::BufferMgr::reserveBuffer(std::_List_iterator<Buffer_Namespace::BufferSeg>&, unsigned long) in /opt/heavyai/bin/heavydb
 5# Buffer_Namespace::Buffer::reserve(unsigned long) in /opt/heavyai/bin/heavydb
 6# Buffer_Namespace::Buffer::Buffer(Buffer_Namespace::BufferMgr*, std::_List_iterator<Buffer_Namespace::BufferSeg>, int, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 7# Buffer_Namespace::GpuCudaBuffer::GpuCudaBuffer(Buffer_Namespace::BufferMgr*, std::_List_iterator<Buffer_Namespace::BufferSeg>, int, CudaMgr_Namespace::CudaMgr*, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 8# Buffer_Namespace::GpuCudaBufferMgr::allocateBuffer(std::_List_iterator<Buffer_Namespace::BufferSeg>, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 9# Buffer_Namespace::BufferMgr::createBuffer(std::vector<int, std::allocator<int> > const&, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
10# Buffer_Namespace::BufferMgr::getBuffer(std::vector<int, std::allocator<int> > const&, unsigned long) in /opt/heavyai/bin/heavydb
11# Data_Namespace::DataMgr::getChunkBuffer(std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long) in /opt/heavyai/bin/heavydb
12# Chunk_NS::Chunk::getChunkBuffer(Data_Namespace::DataMgr*, std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
13# Chunk_NS::Chunk::getChunk(ColumnDescriptor const*, Data_Namespace::DataMgr*, std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long, unsigned long, bool) in /opt/heavyai/bin/heavydb
14# ColumnFetcher::getOneColumnFragment(Executor*, Analyzer::ColumnVar const&, Fragmenter_Namespace::FragmentInfo const&, Data_Namespace::MemoryLevel, int, DeviceAllocator*, unsigned long, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
15# ColumnFetcher::makeJoinColumn(Executor*, Analyzer::ColumnVar const&, std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, Data_Namespace::MemoryLevel, int, DeviceAllocator*, unsigned long, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, std::vector<std::shared_ptr<void>, std::allocator<std::shared_ptr<void> > >&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
16# HashJoin::fetchJoinColumn(Analyzer::ColumnVar const*, std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, Data_Namespace::MemoryLevel, int, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, DeviceAllocator*, std::vector<std::shared_ptr<void>, std::allocator<std::shared_ptr<void> > >&, Executor*, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >*) in /opt/heavyai/bin/heavydb
17# PerfectJoinHashTable::fetchColumnsForDevice(std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, int, DeviceAllocator*) in /opt/heavyai/bin/heavydb
18# PerfectJoinHashTable::reify() in /opt/heavyai/bin/heavydb
19# PerfectJoinHashTable::getInstance(std::shared_ptr<Analyzer::BinOper>, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, int, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, Executor*, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
20# HashJoin::getInstance(std::shared_ptr<Analyzer::BinOper>, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, int, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, Executor*, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
21# Executor::buildHashTableForQualifier(std::shared_ptr<Analyzer::BinOper> const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
22# Executor::buildCurrentLevelHashTable(JoinCondition const&, unsigned long, RelAlgExecutionUnit&, CompilationOptions const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) in /opt/heavyai/bin/heavydb
23# Executor::buildJoinLoops(RelAlgExecutionUnit&, CompilationOptions const&, ExecutionOptions const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
24# Executor::compileWorkUnit(std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, ColumnDescriptor const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, ColumnDescriptor const*> > > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, CudaMgr_Namespace::CudaMgr const*, bool, std::shared_ptr<RowSetMemoryOwner>, unsigned long, signed char, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, RenderInfo*) in /opt/heavyai/bin/heavydb
25# QueryCompilationDescriptor::compile(unsigned long, signed char, bool, RelAlgExecutionUnit const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, ColumnDescriptor const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, ColumnDescriptor const*> > > const&, ColumnFetcher const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, Executor*) in /opt/heavyai/bin/heavydb
26# Executor::executeWorkUnitImpl(unsigned long&, bool, bool, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, std::shared_ptr<RowSetMemoryOwner>, RenderInfo*, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
27# Executor::executeWorkUnit(unsigned long&, bool, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
28# RelAlgExecutor::getNDVEstimation(RelAlgExecutor::WorkUnit const&, long, bool, CompilationOptions const&, ExecutionOptions const&) in /opt/heavyai/bin/heavydb
29# 0x0000000001B2F3F9 in /opt/heavyai/bin/heavydb
30# 0x00000000027856D1 in /opt/heavyai/bin/heavydb
31# RelAlgExecutor::executeSort(RelSort const*, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long) in /opt/heavyai/bin/heavydb
32# RelAlgExecutor::executeRelAlgStep(RaExecutionSequence const&, unsigned long, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long) in /opt/heavyai/bin/heavydb
33# RelAlgExecutor::executeRelAlgSeq(RaExecutionSequence const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long, bool) in /opt/heavyai/bin/heavydb
34# RelAlgExecutor::executeRelAlgQueryNoRetry(CompilationOptions const&, ExecutionOptions const&, bool, bool, RenderInfo*) in /opt/heavyai/bin/heavydb
35# RelAlgExecutor::executeRelAlgQuery(CompilationOptions const&, ExecutionOptions const&, bool, bool, RenderInfo*) in /opt/heavyai/bin/heavydb
36# DBHandler::execute_rel_alg(ExecutionResult&, query_state::QueryStateProxy, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, ExecutorDeviceType, int, int, bool, bool, ExplainInfo const&, std::optional<unsigned long>) const in /opt/heavyai/bin/heavydb
37# 0x000000000215E287 in /opt/heavyai/bin/heavydb
38# 0x000000000215EA14 in /opt/heavyai/bin/heavydb
39# 0x000000000215F87B in /opt/heavyai/bin/heavydb
40# 0x000074BBD2C99EE8 in /lib/x86_64-linux-gnu/libc.so.6
41# 0x00000000020F3DF3 in /opt/heavyai/bin/heavydb
42# QueryDispatchQueue::worker(unsigned long) in /opt/heavyai/bin/heavydb
43# 0x000000000A62E230 in /opt/heavyai/bin/heavydb
44# 0x000074BBD2C94AC3 in /lib/x86_64-linux-gnu/libc.so.6
45# 0x000074BBD2D26850 in /lib/x86_64-linux-gnu/libc.so.6
2025-04-19T00:18:06.567342 1 38833 3 7 BufferMgr.h:55 Failed to allocate 3672899584 bytes with condition FailedToCreateSlab
2025-04-19T00:18:06.567350 1 38833 3 7 BufferMgr.h:56  0# OutOfMemory::OutOfMemory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) in /opt/heavyai/bin/heavydb
 1# FailedToCreateSlab::FailedToCreateSlab(unsigned long) in /opt/heavyai/bin/heavydb
 2# 0x0000000001BCAFF3 in /opt/heavyai/bin/heavydb
 3# Buffer_Namespace::BufferMgr::findFreeBuffer(unsigned long) in /opt/heavyai/bin/heavydb
 4# Buffer_Namespace::BufferMgr::reserveBuffer(std::_List_iterator<Buffer_Namespace::BufferSeg>&, unsigned long) in /opt/heavyai/bin/heavydb
 5# Buffer_Namespace::Buffer::reserve(unsigned long) in /opt/heavyai/bin/heavydb
 6# Buffer_Namespace::Buffer::Buffer(Buffer_Namespace::BufferMgr*, std::_List_iterator<Buffer_Namespace::BufferSeg>, int, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 7# Buffer_Namespace::GpuCudaBuffer::GpuCudaBuffer(Buffer_Namespace::BufferMgr*, std::_List_iterator<Buffer_Namespace::BufferSeg>, int, CudaMgr_Namespace::CudaMgr*, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 8# Buffer_Namespace::GpuCudaBufferMgr::allocateBuffer(std::_List_iterator<Buffer_Namespace::BufferSeg>, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
 9# Buffer_Namespace::BufferMgr::createBuffer(std::vector<int, std::allocator<int> > const&, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
10# Buffer_Namespace::BufferMgr::getBuffer(std::vector<int, std::allocator<int> > const&, unsigned long) in /opt/heavyai/bin/heavydb
11# Data_Namespace::DataMgr::getChunkBuffer(std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long) in /opt/heavyai/bin/heavydb
12# Chunk_NS::Chunk::getChunkBuffer(Data_Namespace::DataMgr*, std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long, unsigned long) in /opt/heavyai/bin/heavydb
13# Chunk_NS::Chunk::getChunk(ColumnDescriptor const*, Data_Namespace::DataMgr*, std::vector<int, std::allocator<int> > const&, Data_Namespace::MemoryLevel, int, unsigned long, unsigned long, bool) in /opt/heavyai/bin/heavydb
14# ColumnFetcher::getOneColumnFragment(Executor*, Analyzer::ColumnVar const&, Fragmenter_Namespace::FragmentInfo const&, Data_Namespace::MemoryLevel, int, DeviceAllocator*, unsigned long, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
15# ColumnFetcher::makeJoinColumn(Executor*, Analyzer::ColumnVar const&, std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, Data_Namespace::MemoryLevel, int, DeviceAllocator*, unsigned long, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, std::vector<std::shared_ptr<void>, std::allocator<std::shared_ptr<void> > >&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
16# HashJoin::fetchJoinColumn(Analyzer::ColumnVar const*, std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, Data_Namespace::MemoryLevel, int, std::vector<std::shared_ptr<Chunk_NS::Chunk>, std::allocator<std::shared_ptr<Chunk_NS::Chunk> > >&, DeviceAllocator*, std::vector<std::shared_ptr<void>, std::allocator<std::shared_ptr<void> > >&, Executor*, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >*) in /opt/heavyai/bin/heavydb
17# PerfectJoinHashTable::fetchColumnsForDevice(std::vector<Fragmenter_Namespace::FragmentInfo, std::allocator<Fragmenter_Namespace::FragmentInfo> > const&, int, DeviceAllocator*) in /opt/heavyai/bin/heavydb
18# PerfectJoinHashTable::reify() in /opt/heavyai/bin/heavydb
19# PerfectJoinHashTable::getInstance(std::shared_ptr<Analyzer::BinOper>, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, int, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, Executor*, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
20# HashJoin::getInstance(std::shared_ptr<Analyzer::BinOper>, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, int, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, Executor*, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
21# Executor::buildHashTableForQualifier(std::shared_ptr<Analyzer::BinOper> const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, Data_Namespace::MemoryLevel, JoinType, HashType, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, std::unordered_map<unsigned long, HashTableBuildDag, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, HashTableBuildDag> > > const&, RegisteredQueryHint const&, std::unordered_map<shared::TableKey, RelAlgNode const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, RelAlgNode const*> > > const&) in /opt/heavyai/bin/heavydb
22# Executor::buildCurrentLevelHashTable(JoinCondition const&, unsigned long, RelAlgExecutionUnit&, CompilationOptions const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) in /opt/heavyai/bin/heavydb
23# Executor::buildJoinLoops(RelAlgExecutionUnit&, CompilationOptions const&, ExecutionOptions const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
24# Executor::compileWorkUnit(std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, ColumnDescriptor const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, ColumnDescriptor const*> > > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, CudaMgr_Namespace::CudaMgr const*, bool, std::shared_ptr<RowSetMemoryOwner>, unsigned long, signed char, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&, RenderInfo*) in /opt/heavyai/bin/heavydb
25# QueryCompilationDescriptor::compile(unsigned long, signed char, bool, RelAlgExecutionUnit const&, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, std::unordered_map<shared::TableKey, ColumnDescriptor const*, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, ColumnDescriptor const*> > > const&, ColumnFetcher const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, Executor*) in /opt/heavyai/bin/heavydb
26# Executor::executeWorkUnitImpl(unsigned long&, bool, bool, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, std::shared_ptr<RowSetMemoryOwner>, RenderInfo*, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
27# Executor::executeWorkUnit(unsigned long&, bool, std::vector<InputTableInfo, std::allocator<InputTableInfo> > const&, RelAlgExecutionUnit const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, bool, std::unordered_map<shared::TableKey, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > >, std::hash<shared::TableKey>, std::equal_to<shared::TableKey>, std::allocator<std::pair<shared::TableKey const, std::unordered_map<int, std::shared_ptr<ColumnarResults const>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::shared_ptr<ColumnarResults const> > > > > > >&) in /opt/heavyai/bin/heavydb
28# RelAlgExecutor::getNDVEstimation(RelAlgExecutor::WorkUnit const&, long, bool, CompilationOptions const&, ExecutionOptions const&) in /opt/heavyai/bin/heavydb
29# 0x0000000001B2F3F9 in /opt/heavyai/bin/heavydb
30# 0x00000000027856D1 in /opt/heavyai/bin/heavydb
31# RelAlgExecutor::executeSort(RelSort const*, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long) in /opt/heavyai/bin/heavydb
32# RelAlgExecutor::executeRelAlgStep(RaExecutionSequence const&, unsigned long, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long) in /opt/heavyai/bin/heavydb
33# RelAlgExecutor::executeRelAlgSeq(RaExecutionSequence const&, CompilationOptions const&, ExecutionOptions const&, RenderInfo*, long, bool) in /opt/heavyai/bin/heavydb
34# RelAlgExecutor::executeRelAlgQueryNoRetry(CompilationOptions const&, ExecutionOptions const&, bool, bool, RenderInfo*) in /opt/heavyai/bin/heavydb
35# RelAlgExecutor::executeRelAlgQuery(CompilationOptions const&, ExecutionOptions const&, bool, bool, RenderInfo*) in /opt/heavyai/bin/heavydb
36# DBHandler::execute_rel_alg(ExecutionResult&, query_state::QueryStateProxy, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, ExecutorDeviceType, int, int, bool, bool, ExplainInfo const&, std::optional<unsigned long>) const in /opt/heavyai/bin/heavydb
37# 0x000000000215E287 in /opt/heavyai/bin/heavydb
38# 0x000000000215EA14 in /opt/heavyai/bin/heavydb
39# 0x000000000215F87B in /opt/heavyai/bin/heavydb
40# 0x000074BBD2C99EE8 in /lib/x86_64-linux-gnu/libc.so.6
41# 0x00000000020F3DF3 in /opt/heavyai/bin/heavydb
42# QueryDispatchQueue::worker(unsigned long) in /opt/heavyai/bin/heavydb
43# 0x000000000A62E230 in /opt/heavyai/bin/heavydb
44# 0x000074BBD2C94AC3 in /lib/x86_64-linux-gnu/libc.so.6
45# 0x000074BBD2D26850 in /lib/x86_64-linux-gnu/libc.so.6
2025-04-19T00:18:06.613627 I 38833 3 7 BufferMgr.cpp:322 ALLOCATION Attempted slab of 7173632 pages (3672899584B) failed GPU_MGR:0
2025-04-19T00:18:06.613940 I 38833 3 7 BufferMgr.cpp:309 ALLOCATION slab of 3586816 pages (1836449792B) created in 0 ms GPU_MGR:0
2025-04-19T00:18:06.613953 1 38833 3 7 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,1,0,
2025-04-19T00:18:06.613977 I 38833 3 7 BufferMgr.cpp:309 ALLOCATION slab of 8388608 pages (4294967296B) created in 0 ms CPU_MGR:0
2025-04-19T00:18:06.613984 1 38833 3 7 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,1,0,
2025-04-19T00:18:06.614345 1 38833 3 8 PerfectHashTable.h:159 Initialize a GPU perfect join hash table for device 0, join type OneToOne, # hash entries: 73049, # entries stored in the payload buffer: 73049, hash table size : 292196 Bytes
2025-04-19T00:18:06.618221 1 38833 3 7 HashingSchemeRecycler.cpp:65 [Hashing Scheme for Join Hashtable, CPU] Put hashtable layout to cache (key: 10275796576258106395)
2025-04-19T00:18:06.618248 1 38833 3 7 PerfectJoinHashTable.cpp:307 Built perfect hash table OneToOne in 99 ms
2025-04-19T00:18:06.618273 1 38833 3 7 HashJoin.cpp:338 Trying to build perfect hash table:
2025-04-19T00:18:06.618316 1 38833 3 7 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,1,0,
2025-04-19T00:18:06.618325 1 38833 3 7 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,1,0,
2025-04-19T00:18:06.618539 1 38833 3 9 PerfectHashTable.h:159 Initialize a GPU perfect join hash table for device 0, join type OneToOne, # hash entries: 18000, # entries stored in the payload buffer: 18000, hash table size : 72000 Bytes
2025-04-19T00:18:06.618768 1 38833 3 7 HashingSchemeRecycler.cpp:65 [Hashing Scheme for Join Hashtable, CPU] Put hashtable layout to cache (key: 5034283305709321086)
2025-04-19T00:18:06.618798 1 38833 3 7 PerfectJoinHashTable.cpp:307 Built perfect hash table OneToOne in 0 ms
2025-04-19T00:18:06.618810 I 38833 3 7 measure.h:84 Timer end                        buildJoinLoops                      buildJoinLoops:  611 elapsed 99 ms
2025-04-19T00:18:06.619027 1 38833 3 7 NativeCodegen.cpp:2255 Set the running query interrupt checking frequency: 32
2025-04-19T00:18:06.619046 1 38833 3 7 NativeCodegen.cpp:3087 number of hoisted literals: 2 / literal buffer usage: 8 bytes
2025-04-19T00:18:06.619456 3 38833 3 7 NativeCodegen.cpp:3200 Unoptimized IR for the GPU:

; Function Attrs: mustprogress nounwind uwtable
define dso_local void @multifrag_query_hoisted_literals(i32* noundef %0, i32* noundef %1, i64** noundef %2, i32* nocapture noundef readonly %3, i32* nocapture noundef readonly %4, i32* noundef %5, i8*** noundef readonly %6, i8* noundef %7, i64* noundef %8, i64* noundef %9, i32* noundef %10, i64* noundef %11, i64* noundef %12, i8* noundef %13) local_unnamed_addr #29 {
  %15 = load i32, i32* %3, align 4, !tbaa !8
  %16 = load i32, i32* %4, align 4, !tbaa !8
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %14
  %19 = icmp eq i8*** %6, null
  %20 = zext i32 %15 to i64
  br i1 %19, label %21, label %36

21:                                               ; preds = %32, %18
  %22 = phi i64 [ %33, %32 ], [ 0, %18 ]
  %23 = trunc i64 %22 to i32
  %24 = mul i32 %16, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i64, i64* %8, i64 %25
  %27 = getelementptr inbounds i64, i64* %9, i64 %25
  call void @query_template(i32* %0, i32* %1, i64** %2, i32 %23, i32* %5, i8** null, i8* %7, i64* %26, i64* %27, i32* %10, i64* %11, i64* %12, i8* %13)
  br label %.interrupt_check

.interrupt_check:                                 ; preds = %21
  %28 = call i1 @check_interrupt()
  %29 = call i32 @get_error_code(i32* %0)
  %30 = select i1 %28, i32 10, i32 %29
  br label %.error_check

.error_check:                                     ; preds = %.interrupt_check
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %.error_exit, label %32

.error_exit:                                      ; preds = %.error_check
  call void @record_error_code(i32 %30, i32* %0)
  ret void

32:                                               ; preds = %.error_check
  %33 = add nuw nsw i64 %22, 1
  %34 = icmp eq i64 %33, %20
  br i1 %34, label %35, label %21, !llvm.loop !24

35:                                               ; preds = %49, %32, %14
  ret void

36:                                               ; preds = %49, %18
  %37 = phi i64 [ %50, %49 ], [ 0, %18 ]
  %38 = getelementptr inbounds i8**, i8*** %6, i64 %37
  %39 = load i8**, i8*** %38, align 8, !tbaa !25
  %40 = trunc i64 %37 to i32
  %41 = mul i32 %16, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, i64* %8, i64 %42
  %44 = getelementptr inbounds i64, i64* %9, i64 %42
  call void @query_template(i32* %0, i32* %1, i64** %2, i32 %40, i32* %5, i8** %39, i8* %7, i64* %43, i64* %44, i32* %10, i64* %11, i64* %12, i8* %13)
  br label %.interrupt_check2

.interrupt_check2:                                ; preds = %36
  %45 = call i1 @check_interrupt()
  %46 = call i32 @get_error_code(i32* %0)
  %47 = select i1 %45, i32 10, i32 %46
  br label %.error_check1

.error_check1:                                    ; preds = %.interrupt_check2
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %.error_exit3, label %49

.error_exit3:                                     ; preds = %.error_check1
  call void @record_error_code(i32 %47, i32* %0)
  ret void

49:                                               ; preds = %.error_check1
  %50 = add nuw nsw i64 %37, 1
  %51 = icmp eq i64 %50, %20
  br i1 %51, label %35, label %36, !llvm.loop !24
}
define void @query_template(i32* %error_code, i32* %total_matched, i64** %out, i32 %frag_idx, i32* nocapture %row_index_resume, i8** nocapture %byte_stream, i8* nocapture %literals, i64* nocapture %row_count_ptr, i64* nocapture %frag_row_off_ptr, i32* nocapture %max_matched_ptr, i64* nocapture %agg_init_val, i64* nocapture %join_hash_tables, i8* nocapture %row_func_mgr) {
.entry:
  %0 = getelementptr i8*, i8** %byte_stream, i32 0
  %1 = load i8*, i8** %0, align 8
  %2 = getelementptr i8*, i8** %byte_stream, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8*, i8** %byte_stream, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr i8*, i8** %byte_stream, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8*, i8** %byte_stream, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8*, i8** %byte_stream, i32 5
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8*, i8** %byte_stream, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8*, i8** %byte_stream, i32 7
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8*, i8** %byte_stream, i32 8
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8*, i8** %byte_stream, i32 9
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %literals, i16 0
  %21 = bitcast i8* %20 to i32*
  %literal_0 = load i32, i32* %21, align 4
  %22 = getelementptr i8, i8* %literals, i16 4
  %23 = bitcast i8* %22 to i32*
  %literal_4 = load i32, i32* %23, align 4
  %row_count = load i64, i64* %row_count_ptr, align 8
  %pos_start = call i32 @pos_start_impl(i32* %row_index_resume)
  %pos_step = call i32 @pos_step_impl()
  %24 = sext i32 %pos_start to i64
  %25 = icmp slt i64 %24, %row_count
  br i1 %25, label %.loop.preheader, label %.exit

.loop.preheader:                                  ; preds = %.entry
  %26 = sext i32 %pos_step to i64
  br label %.for.body

.for.body:                                        ; preds = %36, %.loop.preheader
  %pos = phi i64 [ %24, %.loop.preheader ], [ %37, %36 ]
  %27 = load i64*, i64** %out, align 8
  %28 = call i32 @row_func_hoisted_literals(i64* %27, i64* %agg_init_val, i64 %pos, i64* %frag_row_off_ptr, i64* %row_count_ptr, i8* %literals, i8* %1, i8* %3, i8* %5, i8* %7, i8* %9, i8* %11, i8* %13, i8* %15, i8* %17, i8* %19, i64* %join_hash_tables, i8* %row_func_mgr, i32 %literal_4, i32 %literal_0)
  %29 = lshr i64 %pos, 15
  %30 = and i64 %29, 32
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %.interrupt_check, label %.error_check

.interrupt_check:                                 ; preds = %.for.body
  %32 = call i1 @check_interrupt()
  %33 = select i1 %32, i32 10, i32 %28
  br label %.error_check

.error_check:                                     ; preds = %.for.body, %.interrupt_check
  %34 = phi i32 [ %33, %.interrupt_check ], [ %28, %.for.body ]
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %.error_exit, label %36

.error_exit:                                      ; preds = %.error_check
  call void @record_error_code(i32 %34, i32* %error_code)
  ret void

36:                                               ; preds = %.error_check
  %37 = add nsw i64 %pos, %26
  %38 = icmp slt i64 %37, %row_count
  br i1 %38, label %.for.body, label %._crit_edge

._crit_edge:                                      ; preds = %36
  br label %.exit

.exit:                                            ; preds = %._crit_edge, %.entry
  ret void
}
; Function Attrs: alwaysinline
define i32 @row_func_hoisted_literals(i64* %out, i64* %agg_init_val, i64 %pos, i64* %frag_row_off, i64* %num_rows_per_scan, i8* %literals, i8* %col_buf0, i8* %col_buf1, i8* %col_buf2, i8* %col_buf3, i8* %col_buf4, i8* %col_buf5, i8* %col_buf6, i8* %col_buf7, i8* %col_buf8, i8* %col_buf9, i64* %join_hash_tables, i8* %row_func_mgr, i32 %arg_literal_4, i32 %arg_literal_0) #33 {
entry:
  %loop_done = alloca i1, align 1
  br label %singleton_true_

exit:                                             ; preds = %singleton_true_1, %loop_done_false, %singleton_true_
  ret i32 0

singleton_true_:                                  ; preds = %entry
  %0 = call i64 @fixed_width_int_decode(i8* %col_buf0, i32 4, i64 %pos)
  %1 = trunc i64 %0 to i32
  %2 = load i64, i64* %join_hash_tables, align 8
  %3 = sext i32 %1 to i64
  %4 = call i64 @hash_join_idx_nullable(i64 %2, i64 %3, i64 2415022, i64 2488070, i64 -2147483648)
  %5 = icmp sge i64 %4, 0
  %remaining_outer_cond_match = alloca i1, align 1
  store i1 true, i1* %remaining_outer_cond_match, align 1
  %6 = load i1, i1* %remaining_outer_cond_match, align 1
  %7 = and i1 %5, %6
  br i1 %7, label %singleton_true_1, label %exit

singleton_true_1:                                 ; preds = %singleton_true_
  %8 = call i64 @fixed_width_int_decode(i8* %col_buf1, i32 4, i64 %pos)
  %9 = trunc i64 %8 to i32
  %10 = getelementptr i64, i64* %join_hash_tables, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = sext i32 %9 to i64
  %13 = call i64 @hash_join_idx_nullable(i64 %11, i64 %12, i64 1, i64 18000, i64 -2147483648)
  %14 = icmp sge i64 %13, 0
  %remaining_outer_cond_match2 = alloca i1, align 1
  store i1 true, i1* %remaining_outer_cond_match2, align 1
  %15 = load i1, i1* %remaining_outer_cond_match2, align 1
  %16 = and i1 %14, %15
  br i1 %16, label %loop_body, label %exit

loop_body:                                        ; preds = %singleton_true_1
  store i1 true, i1* %loop_done, align 1
  %17 = call i32 @filter_func_hoisted_literals(i8* %col_buf5, i64 %4, i8* %col_buf9, i64 %13, i8* %col_buf4, i8* %col_buf8, i8* %col_buf7, i64* %out, i1* %loop_done, i32 %arg_literal_4, i32 %arg_literal_0)
  %18 = load i1, i1* %loop_done, align 1
  br i1 %18, label %loop_done_true, label %loop_done_false

loop_done_true:                                   ; preds = %loop_body
  ret i32 %17

loop_done_false:                                  ; preds = %loop_body
  br label %exit
}
; Function Attrs: alwaysinline
define i32 @filter_func_hoisted_literals(i8* %col_buf5, i64 %extra0, i8* %col_buf9, i64 %extra1, i8* %col_buf4, i8* %col_buf8, i8* %col_buf7, i64* %out, i1* %loop_done, i32 %arg_literal_4, i32 %arg_literal_0) #33 {
entry:
  %0 = call i64 @fixed_width_int_decode(i8* %col_buf5, i32 4, i64 %extra0)
  %1 = trunc i64 %0 to i32
  %2 = call i8 @eq_int32_t_nullable_lhs(i32 %1, i32 %arg_literal_0, i64 -2147483648, i8 -128)
  %3 = icmp sgt i8 %2, 0
  %4 = and i1 true, %3
  %5 = call i64 @fixed_width_int_decode(i8* %col_buf9, i32 4, i64 %extra1)
  %6 = trunc i64 %5 to i32
  %7 = call i8 @eq_int32_t_nullable_lhs(i32 %6, i32 %arg_literal_4, i64 -2147483648, i8 -128)
  %8 = icmp sgt i8 %7, 0
  %9 = and i1 %4, %8
  br i1 %9, label %filter_true, label %filter_false

filter_true:                                      ; preds = %entry
  %10 = alloca i64, i32 3, align 8
  %11 = call i64 @fixed_width_int_decode(i8* %col_buf4, i32 4, i64 %extra0)
  %12 = trunc i64 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = getelementptr i64, i64* %10, i32 0
  store i64 %13, i64* %14, align 8
  %15 = call i64 @fixed_width_int_decode(i8* %col_buf8, i32 4, i64 %extra1)
  %16 = trunc i64 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = getelementptr i64, i64* %10, i32 1
  store i64 %17, i64* %18, align 8
  %19 = call i64 @fixed_width_int_decode(i8* %col_buf7, i32 4, i64 %extra1)
  %20 = trunc i64 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = getelementptr i64, i64* %10, i32 2
  store i64 %21, i64* %22, align 8
  %23 = bitcast i64* %out to i8*
  %24 = bitcast i64* %10 to i8*
  call void @linear_probabilistic_count(i8* %23, i32 268435456, i8* %24, i32 24)
  br label %filter_false

filter_false:                                     ; preds = %filter_true, %entry
  store i1 false, i1* %loop_done, align 1
  ret i32 0
}

End of IR
2025-04-19T00:18:06.620492 1 38833 3 7 NativeCodegen.cpp:281 module does not require linking against libdevice
2025-04-19T00:18:06.635031 1 38833 3 7 NvidiaKernel.cpp:144 CUDA JIT time to create link: 0.076616
2025-04-19T00:18:06.734476 1 38833 3 7 NvidiaKernel.cpp:158 CUDA JIT time to add RT fatbinary: 20.6833
2025-04-19T00:18:06.735282 1 38833 3 7 NvidiaKernel.cpp:167 CUDA JIT time to add GPU table functions library: 20.9397
2025-04-19T00:18:06.735390 1 38833 3 7 NvidiaKernel.cpp:179 CUDA JIT time to add generated code: 20.968
2025-04-19T00:18:06.750404 1 38833 3 7 NvidiaKernel.cpp:185 CUDA Linker completed: info    : 14610 bytes gmem, 296 bytes cmem[3]
info    : Function properties for 'multifrag_query_hoisted_literals':
info    : used 64 registers, 232 stack, 0 bytes smem, 464 bytes cmem[0], 0 bytes lmem
info    : Function properties for '_Z24init_group_by_buffer_gpuPlPKljjjjba':
info    : used 30 registers, 0 stack, 0 bytes smem, 386 bytes cmem[0], 0 bytes lmem
info    : Function properties for '_Z41init_columnar_group_by_buffer_gpu_wrapperPlPKljjjPKabba':
info    : used 14 registers, 0 stack, 0 bytes smem, 395 bytes cmem[0], 24 bytes cmem[2], 0 bytes lmem
2025-04-19T00:18:06.750423 1 38833 3 7 NvidiaKernel.cpp:188 Generated GPU binary code size: 459744 bytes
2025-04-19T00:18:06.750841 1 38833 3 7 CodeCacheAccessor.cpp:44 Add compiled kernel to code cache
2025-04-19T00:18:06.751066 I 38833 3 7 measure.h:84 Timer end                query_step_compilation                 executeWorkUnitImpl: 2121 elapsed 233 ms
2025-04-19T00:18:06.751132 1 38833 3 7 Execute.cpp:2863 Creating multifrag execution kernels
2025-04-19T00:18:06.751138 1 38833 3 7 Execute.cpp:2864 Query Memory Descriptor State
	Query Type: Estimator
	Keyless Hash: False
	Effective key width: 8
	Number of group columns: 0
	Col Slot Context State
	Empty	Allow Multifrag: True
	Interleaved Bins on GPU: False
	Blocks Share Memory: False
	Threads Share Memory: True
	Uses Fast Group Values: False
	Lazy Init Groups (GPU): True
	Entry Count: 1
	Min Val (perfect hash only): 0
	Max Val (perfect hash only): 0
	Bucket Val (perfect hash only): 0
	Sort on GPU: False
	Use Streaming Top N: False
	Output Columnar: False
	Allow Lazy Fetch: True
	Render Output: False
	Use Baseline Sort: False
2025-04-19T00:18:06.751230 1 38833 3 7 Execute.cpp:3132 In Executor::LaunchKernels executor 2 requested between 1 and 1 GPU slots, and was granted 1 GPU slots.
2025-04-19T00:18:06.751261 1 38833 3 7 Execute.cpp:2977 Launching 1 kernels for query on GPU using pool of 1 threads.
2025-04-19T00:18:06.751326 I 38833 3 10 measure.h:77 Timer start                          kernel_run                                 run:  133
2025-04-19T00:18:06.751336 I 38833 3 10 measure.h:77 Timer start                         fetchChunks                         fetchChunks: 3381
2025-04-19T00:18:06.751352 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,1,0,
2025-04-19T00:18:06.751361 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,1,0,
2025-04-19T00:18:06.760376 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,3,0,
2025-04-19T00:18:06.760404 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,3,0,
2025-04-19T00:18:06.769467 1 38833 3 10 BufferMgr.cpp:755 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,14,0,
2025-04-19T00:18:06.776452 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,7,0,
2025-04-19T00:18:06.776487 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,7,0,
2025-04-19T00:18:06.776714 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,9,0,
2025-04-19T00:18:06.776725 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 292196, chunk key:  key: 1,8,9,0,
2025-04-19T00:18:06.776941 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,8,0,
2025-04-19T00:18:06.776953 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,8,0,
2025-04-19T00:18:06.777019 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,9,0,
2025-04-19T00:18:06.777026 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,9,0,
2025-04-19T00:18:06.777087 1 38833 3 10 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,14,0,
2025-04-19T00:18:06.777097 1 38833 3 10 BufferMgr.cpp:790 CPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 72000, chunk key:  key: 1,12,14,0,
2025-04-19T00:18:06.777173 I 38833 3 10 measure.h:84 Timer end                           fetchChunks                         fetchChunks: 3381 elapsed 25 ms
2025-04-19T00:18:06.777211 I 38833 3 10 measure.h:77 Timer start           executePlanWithoutGroupBy           executePlanWithoutGroupBy: 3763
2025-04-19T00:18:06.777225 I 38833 3 10 measure.h:77 Timer start                        lauchGpuCode                       launchGpuCode:  228
2025-04-19T00:18:06.777549 1 38833 3 10 DeviceKernel.cpp:178 Device 0: launchGpuCode: runtime query interrupter init: 0.280384 ms
2025-04-19T00:18:06.777562 1 38833 3 10 GpuInterrupt.cpp:26 Registered module 0x74bb684d2300 on device 0
2025-04-19T00:18:06.779241 1 38833 3 10 QueryExecutionContext.cpp:474 Device 0: launchGpuCode: prepare: 1 ms
2025-04-19T00:18:06.779252 1 38833 3 10 QueryExecutionContext.cpp:480 Launching(multifrag_query_hoisted_literals) on device_id(0)
2025-04-19T00:18:06.779258 1 38833 3 10 DeviceKernel.cpp:86 Launch GPU kernel compiled with the following block and grid sizes: 1024 and 32
2025-04-19T00:18:06.779678 1 38833 3 10 QueryExecutionContext.cpp:506 Device 0: launchGpuCode: cuLaunchKernel: 0 ms
2025-04-19T00:18:06.914843 I 38833 3 10 measure.h:84 Timer end                          lauchGpuCode                       launchGpuCode:  228 elapsed 137 ms
2025-04-19T00:18:06.914881 I 38833 3 10 measure.h:84 Timer end             executePlanWithoutGroupBy           executePlanWithoutGroupBy: 3763 elapsed 137 ms
2025-04-19T00:18:06.914902 I 38833 3 10 measure.h:84 Timer end                            kernel_run                                 run:  133 elapsed 163 ms
2025-04-19T00:18:06.914942 I 38833 3 7 measure.h:84 Timer end                  Exec_executeWorkUnit                 executeWorkUnitImpl: 2095 elapsed 397 ms
2025-04-19T00:18:06.989309 1 38833 3 7 RelAlgExecutor.cpp:3926 CardinalityEstimationRequired, Use ndv_estimation: 31, cardinality for estimated_groups_buffer_entry_guess: 62
2025-04-19T00:18:06.989340 1 38833 3 7 Execute.cpp:2026 Executor 2 is executing work unit:
	Extracted Query Plan Dag Hash: 1692648726423179076
	Table/Col/Levels: ((db_id: 1, table_id: 18), 1, 0) ((db_id: 1, table_id: 18), 3, 0) ((db_id: 1, table_id: 18), 14, 0) ((db_id: 1, table_id: 8), 1, 1) ((db_id: 1, table_id: 8), 7, 1) ((db_id: 1, table_id: 8), 9, 1) ((db_id: 1, table_id: 12), 1, 2) ((db_id: 1, table_id: 12), 8, 2) ((db_id: 1, table_id: 12), 9, 2) ((db_id: 1, table_id: 12), 14, 2) 
	Join Quals: 		0 INNER(= (ColumnVar (db_id: 1, table_id: 8, column_id: 1), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 18, column_id: 1), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 8, column_id: 9), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 11) ) 		1 INNER(= (ColumnVar (db_id: 1, table_id: 18, column_id: 3), rte: 0 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (ColumnVar (db_id: 1, table_id: 12, column_id: 1), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) , (= (ColumnVar (db_id: 1, table_id: 12, column_id: 14), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) (Const 816) ) 
	Group By: (ColumnVar (db_id: 1, table_id: 8, column_id: 7), rte: 1 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) , (ColumnVar (db_id: 1, table_id: 12, column_id: 9), rte: 2 TEXT, type: (type=TEXT, dimension=0, scale=0, null=nullable, compression_name=DICT, comp_param=61, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 1, string_dict_id: 61), uses_flatbuffer=0)) , (ColumnVar (db_id: 1, table_id: 12, column_id: 8), rte: 2 INTEGER, type: (type=INTEGER, dimension=0, scale=0, null=nullable, compression_name=NONE, comp_param=0, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) 
	Projected targets: (Var (db_id: 1, table_id: 8, column_id: 7), rte: 1, which_row: 3, varno: 1) , (Var (db_id: 1, table_id: 12, column_id: 8), rte: 2, which_row: 3, varno: 3) , (Var (db_id: 1, table_id: 12, column_id: 9), rte: 2, which_row: 3, varno: 2) , (SUM (ColumnVar (db_id: 1, table_id: 18, column_id: 14), rte: 0 DECIMAL(7,2), type: (type=DECIMAL, dimension=7, scale=2, null=nullable, compression_name=FIXED, comp_param=32, subtype=NULL, size=4, element_size=-1, dict_key=(db_id: 0, string_dict_id: 0), uses_flatbuffer=0)) ) 
	Has Estimator: True
	Sort Info: 
	  Order Entries: 1 , 4 desc nulls first , 2 
	  Algorithm: Speculative Top N
	  Limit: 100
	  Offset: 0
	Scan Limit: 0
	Bump Allocator: False
2025-04-19T00:18:06.989395 I 38833 3 7 measure.h:77 Timer start                Exec_executeWorkUnit                 executeWorkUnitImpl: 2095
2025-04-19T00:18:06.989419 I 38833 3 7 measure.h:77 Timer start              query_step_compilation                 executeWorkUnitImpl: 2121
2025-04-19T00:18:06.990182 I 38833 3 7 measure.h:77 Timer start                      buildJoinLoops                      buildJoinLoops:  611
2025-04-19T00:18:06.990205 1 38833 3 7 HashJoin.cpp:338 Trying to build perfect hash table:
2025-04-19T00:18:06.990245 1 38833 3 7 HashingSchemeRecycler.cpp:35 [Hashing Scheme for Join Hashtable, CPU] Recycle hashtable layout in cache: OneToOne(key: 10275796576258106395)
2025-04-19T00:18:06.990385 1 38833 3 11 PerfectHashTable.h:159 Initialize a GPU perfect join hash table for device 0, join type OneToOne, # hash entries: 73049, # entries stored in the payload buffer: 73049, hash table size : 292196 Bytes
2025-04-19T00:18:06.990609 1 38833 3 7 PerfectJoinHashTable.cpp:307 Built perfect hash table OneToOne in 0 ms
2025-04-19T00:18:06.990644 1 38833 3 7 HashJoin.cpp:338 Trying to build perfect hash table:
2025-04-19T00:18:06.990666 1 38833 3 7 HashingSchemeRecycler.cpp:35 [Hashing Scheme for Join Hashtable, CPU] Recycle hashtable layout in cache: OneToOne(key: 5034283305709321086)
2025-04-19T00:18:06.990744 1 38833 3 12 PerfectHashTable.h:159 Initialize a GPU perfect join hash table for device 0, join type OneToOne, # hash entries: 18000, # entries stored in the payload buffer: 18000, hash table size : 72000 Bytes
2025-04-19T00:18:06.990973 1 38833 3 7 PerfectJoinHashTable.cpp:307 Built perfect hash table OneToOne in 0 ms
2025-04-19T00:18:06.991009 I 38833 3 7 measure.h:84 Timer end                        buildJoinLoops                      buildJoinLoops:  611 elapsed 0 ms
2025-04-19T00:18:06.991232 1 38833 3 7 NativeCodegen.cpp:2255 Set the running query interrupt checking frequency: 32
2025-04-19T00:18:06.991244 1 38833 3 7 NativeCodegen.cpp:3087 number of hoisted literals: 2 / literal buffer usage: 8 bytes
2025-04-19T00:18:06.991587 3 38833 3 7 NativeCodegen.cpp:3200 Unoptimized IR for the GPU:

; Function Attrs: mustprogress nounwind uwtable
define dso_local void @multifrag_query_hoisted_literals(i32* noundef %0, i32* noundef %1, i64** noundef %2, i32* nocapture noundef readonly %3, i32* nocapture noundef readonly %4, i32* noundef %5, i8*** noundef readonly %6, i8* noundef %7, i64* noundef %8, i64* noundef %9, i32* noundef %10, i64* noundef %11, i64* noundef %12, i8* noundef %13) local_unnamed_addr #29 {
  %15 = load i32, i32* %3, align 4, !tbaa !8
  %16 = load i32, i32* %4, align 4, !tbaa !8
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %14
  %19 = icmp eq i8*** %6, null
  %20 = zext i32 %15 to i64
  br i1 %19, label %21, label %36

21:                                               ; preds = %32, %18
  %22 = phi i64 [ %33, %32 ], [ 0, %18 ]
  %23 = trunc i64 %22 to i32
  %24 = mul i32 %16, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i64, i64* %8, i64 %25
  %27 = getelementptr inbounds i64, i64* %9, i64 %25
  call void @query_group_by_template(i32* %0, i32* %1, i64** %2, i32 %23, i32* %5, i8** null, i8* %7, i64* %26, i64* %27, i32* %10, i64* %11, i64* %12, i8* %13)
  br label %.interrupt_check

.interrupt_check:                                 ; preds = %21
  %28 = call i1 @check_interrupt()
  %29 = call i32 @get_error_code(i32* %0)
  %30 = select i1 %28, i32 10, i32 %29
  br label %.error_check

.error_check:                                     ; preds = %.interrupt_check
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %.error_exit, label %32

.error_exit:                                      ; preds = %.error_check
  call void @record_error_code(i32 %30, i32* %0)
  ret void

32:                                               ; preds = %.error_check
  %33 = add nuw nsw i64 %22, 1
  %34 = icmp eq i64 %33, %20
  br i1 %34, label %35, label %21, !llvm.loop !27

35:                                               ; preds = %49, %32, %14
  ret void

36:                                               ; preds = %49, %18
  %37 = phi i64 [ %50, %49 ], [ 0, %18 ]
  %38 = getelementptr inbounds i8**, i8*** %6, i64 %37
  %39 = load i8**, i8*** %38, align 8, !tbaa !16
  %40 = trunc i64 %37 to i32
  %41 = mul i32 %16, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, i64* %8, i64 %42
  %44 = getelementptr inbounds i64, i64* %9, i64 %42
  call void @query_group_by_template(i32* %0, i32* %1, i64** %2, i32 %40, i32* %5, i8** %39, i8* %7, i64* %43, i64* %44, i32* %10, i64* %11, i64* %12, i8* %13)
  br label %.interrupt_check2

.interrupt_check2:                                ; preds = %36
  %45 = call i1 @check_interrupt()
  %46 = call i32 @get_error_code(i32* %0)
  %47 = select i1 %45, i32 10, i32 %46
  br label %.error_check1

.error_check1:                                    ; preds = %.interrupt_check2
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %.error_exit3, label %49

.error_exit3:                                     ; preds = %.error_check1
  call void @record_error_code(i32 %47, i32* %0)
  ret void

49:                                               ; preds = %.error_check1
  %50 = add nuw nsw i64 %37, 1
  %51 = icmp eq i64 %50, %20
  br i1 %51, label %35, label %36, !llvm.loop !27
}
; Function Attrs: uwtable
define void @query_group_by_template(i32* %error_code, i32* %total_matched, i64** %group_by_buffers, i32 %frag_idx, i32* nocapture readonly %row_index_resume, i8** nocapture readonly %byte_stream, i8* nocapture readonly %literals, i64* nocapture readonly %row_count_ptr, i64* nocapture readonly %frag_row_off_ptr, i32* nocapture readonly %max_matched_ptr, i64* nocapture readonly %agg_init_val, i64* nocapture readonly %join_hash_tables, i8* nocapture readonly %row_func_mgr) #33 {
.entry:
  %0 = getelementptr i8*, i8** %byte_stream, i32 0
  %1 = load i8*, i8** %0, align 8
  %2 = getelementptr i8*, i8** %byte_stream, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8*, i8** %byte_stream, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr i8*, i8** %byte_stream, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8*, i8** %byte_stream, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8*, i8** %byte_stream, i32 5
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8*, i8** %byte_stream, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8*, i8** %byte_stream, i32 7
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8*, i8** %byte_stream, i32 8
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8*, i8** %byte_stream, i32 9
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %literals, i16 0
  %21 = bitcast i8* %20 to i32*
  %literal_0 = load i32, i32* %21, align 4
  %22 = getelementptr i8, i8* %literals, i16 4
  %23 = bitcast i8* %22 to i32*
  %literal_4 = load i32, i32* %23, align 4
  %row_count = load i64, i64* %row_count_ptr, align 8
  %24 = load i32, i32* %max_matched_ptr, align 8
  %crt_matched = alloca i32, align 4
  %old_total_matched = alloca i32, align 4
  %25 = call i32 @pos_start_impl(i32* %row_index_resume)
  %26 = call i32 @pos_step_impl()
  %27 = call i32 @group_buff_idx_impl()
  %28 = sext i32 %25 to i64
  %29 = getelementptr i64*, i64** %group_by_buffers, i32 %27
  %col_buffer = load i64*, i64** %29, align 8
  %result_buffer = call i64* @init_shared_mem_nop(i64* %col_buffer, i32 0)
  %30 = icmp slt i64 %28, %row_count
  br i1 %30, label %.loop.preheader, label %.exit

.loop.preheader:                                  ; preds = %.entry
  %31 = sext i32 %26 to i64
  br label %.forbody

.forbody:                                         ; preds = %40, %.loop.preheader
  %pos = phi i64 [ %28, %.loop.preheader ], [ %41, %40 ]
  %32 = call i32 @row_func_hoisted_literals(i64* %result_buffer, i64* null, i32* %crt_matched, i32* %total_matched, i32* %old_total_matched, i32* %max_matched_ptr, i64* %agg_init_val, i64 %pos, i64* %frag_row_off_ptr, i64* %row_count_ptr, i8* %literals, i8* %1, i8* %3, i8* %5, i8* %7, i8* %9, i8* %11, i8* %13, i8* %15, i8* %17, i8* %19, i64* %join_hash_tables, i8* %row_func_mgr, i32 %literal_4, i32 %literal_0)
  %33 = lshr i64 %pos, 15
  %34 = and i64 %33, 32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %.interrupt_check, label %.error_check

.interrupt_check:                                 ; preds = %.forbody
  %36 = call i1 @check_interrupt()
  %37 = select i1 %36, i32 10, i32 %32
  br label %.error_check

.error_check:                                     ; preds = %.forbody, %.interrupt_check
  %38 = phi i32 [ %37, %.interrupt_check ], [ %32, %.forbody ]
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %.error_exit, label %40

.error_exit:                                      ; preds = %.error_check
  call void @record_error_code(i32 %38, i32* %error_code)
  ret void

40:                                               ; preds = %.error_check
  call void @sync_warp_protected(i64 %pos, i64 %row_count)
  %41 = add i64 %pos, %31
  %42 = icmp slt i64 %41, %row_count
  br i1 %42, label %.forbody, label %._crit_edge

._crit_edge:                                      ; preds = %40
  br label %.exit

.exit:                                            ; preds = %._crit_edge, %.entry
  call void @write_back_nop(i64* %col_buffer, i64* %result_buffer, i32 0)
  ret void
}
; Function Attrs: alwaysinline
define i32 @row_func_hoisted_literals(i64* %group_by_buff, i64* %varlen_output_buff, i32* %crt_matched, i32* %total_matched, i32* %old_total_matched, i32* %max_matched, i64* %agg_init_val, i64 %pos, i64* %frag_row_off, i64* %num_rows_per_scan, i8* %literals, i8* %col_buf0, i8* %col_buf1, i8* %col_buf2, i8* %col_buf3, i8* %col_buf4, i8* %col_buf5, i8* %col_buf6, i8* %col_buf7, i8* %col_buf8, i8* %col_buf9, i64* %join_hash_tables, i8* %row_func_mgr, i32 %arg_literal_4, i32 %arg_literal_0) #34 {
entry:
  %loop_done = alloca i1, align 1
  br label %singleton_true_

exit:                                             ; preds = %singleton_true_1, %loop_done_false, %singleton_true_
  ret i32 0

singleton_true_:                                  ; preds = %entry
  %0 = call i64 @fixed_width_int_decode(i8* %col_buf0, i32 4, i64 %pos)
  %1 = trunc i64 %0 to i32
  %2 = load i64, i64* %join_hash_tables, align 8
  %3 = sext i32 %1 to i64
  %4 = call i64 @hash_join_idx_nullable(i64 %2, i64 %3, i64 2415022, i64 2488070, i64 -2147483648)
  %5 = icmp sge i64 %4, 0
  %remaining_outer_cond_match = alloca i1, align 1
  store i1 true, i1* %remaining_outer_cond_match, align 1
  %6 = load i1, i1* %remaining_outer_cond_match, align 1
  %7 = and i1 %5, %6
  br i1 %7, label %singleton_true_1, label %exit

singleton_true_1:                                 ; preds = %singleton_true_
  %8 = call i64 @fixed_width_int_decode(i8* %col_buf1, i32 4, i64 %pos)
  %9 = trunc i64 %8 to i32
  %10 = getelementptr i64, i64* %join_hash_tables, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = sext i32 %9 to i64
  %13 = call i64 @hash_join_idx_nullable(i64 %11, i64 %12, i64 1, i64 18000, i64 -2147483648)
  %14 = icmp sge i64 %13, 0
  %remaining_outer_cond_match2 = alloca i1, align 1
  store i1 true, i1* %remaining_outer_cond_match2, align 1
  %15 = load i1, i1* %remaining_outer_cond_match2, align 1
  %16 = and i1 %14, %15
  br i1 %16, label %loop_body, label %exit

loop_body:                                        ; preds = %singleton_true_1
  store i1 true, i1* %loop_done, align 1
  %17 = call i32 @filter_func_hoisted_literals(i8* %col_buf5, i64 %4, i8* %col_buf9, i64 %13, i8* %col_buf4, i8* %col_buf8, i8* %col_buf7, i64* %group_by_buff, i1* %loop_done, i8* %col_buf2, i64 %pos, i32 %arg_literal_4, i32 %arg_literal_0)
  %18 = load i1, i1* %loop_done, align 1
  br i1 %18, label %loop_done_true, label %loop_done_false

loop_done_true:                                   ; preds = %loop_body
  ret i32 %17

loop_done_false:                                  ; preds = %loop_body
  br label %exit
}
; Function Attrs: alwaysinline
define i32 @filter_func_hoisted_literals(i8* %col_buf5, i64 %extra0, i8* %col_buf9, i64 %extra1, i8* %col_buf4, i8* %col_buf8, i8* %col_buf7, i64* %group_by_buff, i1* %loop_done, i8* %col_buf2, i64 %pos, i32 %arg_literal_4, i32 %arg_literal_0) #34 {
entry:
  %0 = call i64 @fixed_width_int_decode(i8* %col_buf5, i32 4, i64 %extra0)
  %1 = trunc i64 %0 to i32
  %2 = call i8 @eq_int32_t_nullable_lhs(i32 %1, i32 %arg_literal_0, i64 -2147483648, i8 -128)
  %3 = icmp sgt i8 %2, 0
  %4 = and i1 true, %3
  %5 = call i64 @fixed_width_int_decode(i8* %col_buf9, i32 4, i64 %extra1)
  %6 = trunc i64 %5 to i32
  %7 = call i8 @eq_int32_t_nullable_lhs(i32 %6, i32 %arg_literal_4, i64 -2147483648, i8 -128)
  %8 = icmp sgt i8 %7, 0
  %9 = and i1 %4, %8
  br i1 %9, label %filter_true, label %filter_false

filter_true:                                      ; preds = %entry
  %10 = alloca i32, i32 3, align 4
  %11 = call i64 @fixed_width_int_decode(i8* %col_buf4, i32 4, i64 %extra0)
  %12 = trunc i64 %11 to i32
  %13 = getelementptr i32, i32* %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = call i64 @fixed_width_int_decode(i8* %col_buf8, i32 4, i64 %extra1)
  %15 = trunc i64 %14 to i32
  %16 = getelementptr i32, i32* %10, i32 1
  store i32 %15, i32* %16, align 4
  %17 = call i64 @fixed_width_int_decode(i8* %col_buf7, i32 4, i64 %extra1)
  %18 = trunc i64 %17 to i32
  %19 = getelementptr i32, i32* %10, i32 2
  store i32 %18, i32* %19, align 4
  %20 = bitcast i32* %10 to i64*
  %21 = call i64* @get_group_value(i64* %group_by_buff, i32 62, i64* %20, i32 3, i32 4, i32 3)
  %22 = icmp ne i64* %21, null
  br i1 %22, label %groupby_nullcheck_true, label %groupby_nullcheck_false

filter_false:                                     ; preds = %groupby_nullcheck_true, %entry
  store i1 false, i1* %loop_done, align 1
  ret i32 0

groupby_nullcheck_true:                           ; preds = %filter_true
  %23 = call i64 @fixed_width_int_decode(i8* %col_buf2, i32 4, i64 %pos)
  %24 = trunc i64 %23 to i32
  %25 = call i64 @cast_int32_t_to_int64_t_nullable(i32 %24, i32 -2147483648, i64 -9223372036854775808)
  %agg_col_ptr = getelementptr i64, i64* %21, i64 0
  %26 = call i64 @agg_sum_skip_val_shared(i64* %agg_col_ptr, i64 %25, i64 -9223372036854775808)
  br label %filter_false

groupby_nullcheck_false:                          ; preds = %filter_true
  %27 = trunc i64 %pos to i32
  %28 = sub i32 0, %27
  ret i32 %28
}

End of IR
2025-04-19T00:18:06.991884 1 38833 3 7 NativeCodegen.cpp:281 module does not require linking against libdevice
2025-04-19T00:18:07.006168 1 38833 3 7 NvidiaKernel.cpp:144 CUDA JIT time to create link: 0.075778
2025-04-19T00:18:07.075301 1 38833 3 7 NvidiaKernel.cpp:158 CUDA JIT time to add RT fatbinary: 14.8714
2025-04-19T00:18:07.076076 1 38833 3 7 NvidiaKernel.cpp:167 CUDA JIT time to add GPU table functions library: 15.1039
2025-04-19T00:18:07.076193 1 38833 3 7 NvidiaKernel.cpp:179 CUDA JIT time to add generated code: 15.1324
2025-04-19T00:18:07.091824 1 38833 3 7 NvidiaKernel.cpp:185 CUDA Linker completed: info    : 14610 bytes gmem, 296 bytes cmem[3]
info    : Function properties for 'multifrag_query_hoisted_literals':
info    : used 64 registers, 272 stack, 0 bytes smem, 464 bytes cmem[0], 0 bytes lmem
info    : Function properties for '_Z24init_group_by_buffer_gpuPlPKljjjjba':
info    : used 30 registers, 0 stack, 0 bytes smem, 386 bytes cmem[0], 0 bytes lmem
info    : Function properties for '_Z41init_columnar_group_by_buffer_gpu_wrapperPlPKljjjPKabba':
info    : used 14 registers, 0 stack, 0 bytes smem, 395 bytes cmem[0], 24 bytes cmem[2], 0 bytes lmem
2025-04-19T00:18:07.091844 1 38833 3 7 NvidiaKernel.cpp:188 Generated GPU binary code size: 474464 bytes
2025-04-19T00:18:07.092284 1 38833 3 7 CodeCacheAccessor.cpp:44 Add compiled kernel to code cache
2025-04-19T00:18:07.092582 I 38833 3 7 measure.h:84 Timer end                query_step_compilation                 executeWorkUnitImpl: 2121 elapsed 103 ms
2025-04-19T00:18:07.092649 1 38833 3 7 Execute.cpp:2863 Creating multifrag execution kernels
2025-04-19T00:18:07.092654 1 38833 3 7 Execute.cpp:2864 Query Memory Descriptor State
	Query Type: Baseline Hash
	Keyless Hash: False
	Effective key width: 4
	Number of group columns: 3
	Target group by indices: 0,2,1,-1
	Col Slot Context State
	N | P , L
	0 | 0 , 0
	1 | 0 , 0
	2 | 0 , 0
	3 | 8 , 8
	col_to_slot_map=[[0], [1], [2], [3]]
	varlen_output_slot_map={}
	Allow Multifrag: True
	Interleaved Bins on GPU: False
	Blocks Share Memory: True
	Threads Share Memory: True
	Uses Fast Group Values: False
	Lazy Init Groups (GPU): True
	Entry Count: 62
	Min Val (perfect hash only): 0
	Max Val (perfect hash only): 0
	Bucket Val (perfect hash only): 0
	Sort on GPU: False
	Use Streaming Top N: False
	Output Columnar: False
	Allow Lazy Fetch: True
	Render Output: False
	Use Baseline Sort: False
2025-04-19T00:18:07.092734 1 38833 3 7 Execute.cpp:3132 In Executor::LaunchKernels executor 2 requested between 1 and 1 GPU slots, and was granted 1 GPU slots.
2025-04-19T00:18:07.092762 1 38833 3 7 Execute.cpp:2977 Launching 1 kernels for query on GPU using pool of 1 threads.
2025-04-19T00:18:07.092792 I 38833 3 13 measure.h:77 Timer start                          kernel_run                                 run:  133
2025-04-19T00:18:07.092804 I 38833 3 13 measure.h:77 Timer start                         fetchChunks                         fetchChunks: 3381
2025-04-19T00:18:07.092821 1 38833 3 13 BufferMgr.cpp:755 GPU_MGR: Fetching buffer from parent manager. Reason: cache miss. Num bytes to fetch: 11521616, chunk key:  key: 1,18,14,0,
2025-04-19T00:18:07.094474 I 38833 3 13 measure.h:84 Timer end                           fetchChunks                         fetchChunks: 3381 elapsed 1 ms
2025-04-19T00:18:07.094538 I 38833 3 13 measure.h:77 Timer start              executePlanWithGroupBy              executePlanWithGroupBy: 3992
2025-04-19T00:18:07.094547 2 38833 3 13 Execute.cpp:4027 bool(ra_exe_unit.union_all)=false ra_exe_unit.input_descs=(InputDescriptor(db_id(1), table_id(18),nest_level(0)) InputDescriptor(db_id(1), table_id(8),nest_level(1)) InputDescriptor(db_id(1), table_id(12),nest_level(2))) ra_exe_unit.input_col_descs=(InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(18),nest_level(0))) InputColDescriptor(col_id(3),InputDescriptor(db_id(1), table_id(18),nest_level(0))) InputColDescriptor(col_id(14),InputDescriptor(db_id(1), table_id(18),nest_level(0))) InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(8),nest_level(1))) InputColDescriptor(col_id(7),InputDescriptor(db_id(1), table_id(8),nest_level(1))) InputColDescriptor(col_id(9),InputDescriptor(db_id(1), table_id(8),nest_level(1))) InputColDescriptor(col_id(1),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(8),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(9),InputDescriptor(db_id(1), table_id(12),nest_level(2))) InputColDescriptor(col_id(14),InputDescriptor(db_id(1), table_id(12),nest_level(2)))) ra_exe_unit.scan_limit=0 num_rows=((2880404 73049 18000)) frag_offsets=((0 0 0)) query_exe_context->query_buffers_->num_rows_=-1 query_exe_context->query_mem_desc_.getEntryCount()=62 device_id=0 outer_table_key=(db_id: 1, table_id: 18) scan_limit=0 start_rowid=0 num_tables=3
2025-04-19T00:18:07.094573 I 38833 3 13 measure.h:77 Timer start                        lauchGpuCode                       launchGpuCode:  228
2025-04-19T00:18:07.094694 1 38833 3 13 DeviceKernel.cpp:178 Device 0: launchGpuCode: runtime query interrupter init: 0.015488 ms
2025-04-19T00:18:07.094703 1 38833 3 13 GpuInterrupt.cpp:26 Registered module 0x74bb685bbb10 on device 0
2025-04-19T00:18:07.095049 1 38833 3 13 QueryExecutionContext.cpp:315 Device 0: launchGpuCode: group-by prepare: 0 ms
2025-04-19T00:18:07.095063 1 38833 3 13 QueryExecutionContext.cpp:322 Launching(multifrag_query_hoisted_literals) on device_id(0)
2025-04-19T00:18:07.095068 1 38833 3 13 DeviceKernel.cpp:86 Launch GPU kernel compiled with the following block and grid sizes: 1024 and 32
2025-04-19T00:18:07.095642 1 38833 3 13 QueryExecutionContext.cpp:347 Device 0: launchGpuCode: group-by cuLaunchKernel: 0 ms
2025-04-19T00:18:07.095721 1 38833 3 13 GpuInterrupt.cpp:38 Unregistered module on device 0
2025-04-19T00:18:07.095735 1 38833 3 13 QueryExecutionContext.cpp:554 Device 0: launchGpuCode: finish: 0 ms
2025-04-19T00:18:07.095741 I 38833 3 13 measure.h:84 Timer end                          lauchGpuCode                       launchGpuCode:  228 elapsed 1 ms
2025-04-19T00:18:07.096328 3 38833 3 13 ResultSetReductionJIT.cpp:1262 Reduction Loop:
define i32 @reduce_loop(i8* %this_buff, i8* %that_buff, i32 %start_index, i32 %end_index, i32 %that_entry_count, i8* %this_qmd_handle, i8* %that_qmd_handle, i8* %serialized_varlen_buffer) {
.entry:
  %iteration_count = sub i32 %end_index, %start_index
  %0 = sext i32 %iteration_count to i64
  br label %ub_iter_preheader_reduction_loop

.exit:                                            ; preds = %ub_iter_head_reduction_loop
  ret i32 0

ub_iter_preheader_reduction_loop:                 ; preds = %.entry
  %ub_iter_counter_ptr_reduction_loop = alloca i64, align 8
  store i64 0, i64* %ub_iter_counter_ptr_reduction_loop, align 8
  br label %ub_iter_head_reduction_loop

ub_iter_head_reduction_loop:                      ; preds = %ub_iter_advance_reduction_loop, %ub_iter_preheader_reduction_loop
  %ub_iter_counter_val_reduction_loop = load i64, i64* %ub_iter_counter_ptr_reduction_loop, align 8
  %have_more_inner_rows = icmp slt i64 %ub_iter_counter_val_reduction_loop, %0
  br i1 %have_more_inner_rows, label %.loop_body, label %.exit

ub_iter_advance_reduction_loop:                   ; preds = %.do_reduction2
  %1 = add i64 %ub_iter_counter_val_reduction_loop, 1
  store i64 %1, i64* %ub_iter_counter_ptr_reduction_loop, align 8
  br label %ub_iter_head_reduction_loop

.loop_body:                                       ; preds = %ub_iter_head_reduction_loop
  %relative_entry_idx = trunc i64 %ub_iter_counter_val_reduction_loop to i32
  %that_entry_idx = add i32 %relative_entry_idx, %start_index
  %2 = sext i32 %that_entry_idx to i64
  %3 = call i8 @check_interrupt_rt(i64 %2)
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %.early_return, label %.do_reduction

.early_return:                                    ; preds = %.loop_body
  ret i32 10

.do_reduction:                                    ; preds = %.loop_body
  %5 = call i32 @reduce_one_entry_idx(i8* %this_buff, i8* %that_buff, i32 %that_entry_idx, i32 %that_entry_count, i8* %this_qmd_handle, i8* %that_qmd_handle, i8* %serialized_varlen_buffer)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %.early_return1, label %.do_reduction2

.early_return1:                                   ; preds = %.do_reduction
  ret i32 %5

.do_reduction2:                                   ; preds = %.do_reduction
  br label %ub_iter_advance_reduction_loop
}
2025-04-19T00:18:07.096415 3 38833 3 13 ResultSetReductionJIT.cpp:1264 Reduction Is Empty Func:
; Function Attrs: alwaysinline
define private i1 @is_empty_entry(i8* %row_ptr) #33 {
.entry:
  %0 = bitcast i8* %row_ptr to i32*
  %row_ptr_loaded = load i32, i32* %0, align 4
  %is_key_empty = icmp eq i32 %row_ptr_loaded, 2147483647
  ret i1 %is_key_empty
}
2025-04-19T00:18:07.096446 3 38833 3 13 ResultSetReductionJIT.cpp:1265 Reduction One Entry Func:
; Function Attrs: alwaysinline
define private i32 @reduce_one_entry(i8* %this_targets_ptr, i8* %that_targets_ptr, i8* %this_qmd, i8* %that_qmd, i8* %serialized_varlen_buffer_arg) #33 {
.entry:
  %target_1_first_slot = getelementptr i8, i8* %this_targets_ptr, i32 0
  %target_1_first_slot1 = getelementptr i8, i8* %that_targets_ptr, i32 0
  %target_2_first_slot = getelementptr i8, i8* %this_targets_ptr, i32 0
  %target_2_first_slot2 = getelementptr i8, i8* %that_targets_ptr, i32 0
  %target_3_first_slot = getelementptr i8, i8* %this_targets_ptr, i32 0
  %target_3_first_slot3 = getelementptr i8, i8* %that_targets_ptr, i32 0
  %sum_dest = bitcast i8* %target_3_first_slot to i64*
  %0 = bitcast i8* %target_3_first_slot3 to i64*
  %target_3_first_slot_loaded = load i64, i64* %0, align 8
  %1 = call i64 @agg_sum_skip_val(i64* %sum_dest, i64 %target_3_first_slot_loaded, i64 -9223372036854775808)
  ret i32 0
}
2025-04-19T00:18:07.096479 3 38833 3 13 ResultSetReductionJIT.cpp:1266 Reduction One Entry Idx Func:
; Function Attrs: alwaysinline
define private i32 @reduce_one_entry_idx(i8* %this_buff, i8* %that_buff, i32 %that_entry_idx, i32 %that_entry_count, i8* %this_qmd_handle, i8* %that_qmd_handle, i8* %serialized_varlen_buffer) #33 {
.entry:
  %that_entry_idx_64 = sext i32 %that_entry_idx to i64
  %that_row_off_in_bytes = mul i64 %that_entry_idx_64, 24
  %that_row_ptr = getelementptr i8, i8* %that_buff, i64 %that_row_off_in_bytes
  %that_is_empty = call i1 @is_empty_entry(i8* %that_row_ptr)
  br i1 %that_is_empty, label %.early_return, label %.do_reduction

.early_return:                                    ; preds = %.entry
  ret i32 0

.do_reduction:                                    ; preds = %.entry
  %this_targets_ptr_out = alloca i64*, align 8
  %this_is_empty_out = alloca i8, align 1
  call void @get_group_value_reduction_rt(i8* %this_buff, i8* %that_row_ptr, i32 3, i8* %this_qmd_handle, i8* %that_buff, i32 %that_entry_idx, i32 %that_entry_count, i64 24, i64** %this_targets_ptr_out, i8* %this_is_empty_out)
  %this_targets_ptr_i64 = load i64*, i64** %this_targets_ptr_out, align 8
  %this_is_empty = load i8, i8* %this_is_empty_out, align 1
  %this_is_empty_bool = trunc i8 %this_is_empty to i1
  br i1 %this_is_empty_bool, label %.early_return1, label %.do_reduction2

.early_return1:                                   ; preds = %.do_reduction
  ret i32 0

.do_reduction2:                                   ; preds = %.do_reduction
  %this_targets_ptr = bitcast i64* %this_targets_ptr_i64 to i8*
  %that_targets_ptr = getelementptr i8, i8* %that_row_ptr, i32 16
  %0 = call i32 @reduce_one_entry(i8* %this_targets_ptr, i8* %that_targets_ptr, i8* %this_qmd_handle, i8* %that_qmd_handle, i8* %serialized_varlen_buffer)
  ret i32 %0
}
2025-04-19T00:18:07.099689 2 38833 3 13 Execute.cpp:4139 results->rowCount()=31
2025-04-19T00:18:07.099716 I 38833 3 13 measure.h:84 Timer end                executePlanWithGroupBy              executePlanWithGroupBy: 3992 elapsed 5 ms
2025-04-19T00:18:07.099732 I 38833 3 13 measure.h:84 Timer end                            kernel_run                                 run:  133 elapsed 6 ms
2025-04-19T00:18:07.099787 1 38833 3 7 CodeCacheAccessor.cpp:77 Reuse a cached compiled code
2025-04-19T00:18:07.099808 I 38833 3 7 measure.h:84 Timer end                  Exec_executeWorkUnit                 executeWorkUnitImpl: 2095 elapsed 110 ms
2025-04-19T00:18:07.099840 1 38833 3 7 Execute.cpp:5202 Put estimated cardinality to the cache
2025-04-19T00:18:07.099858 I 38833 3 7 measure.h:84 Timer end                       executeWorkUnit                     executeWorkUnit: 3651 elapsed 582 ms
2025-04-19T00:18:07.099906 I 38833 3 7 measure.h:84 Timer end                     executeRelAlgStep                   executeRelAlgStep: 1154 elapsed 582 ms
2025-04-19T00:18:07.099914 I 38833 3 7 measure.h:84 Timer end                      executeRelAlgSeq                    executeRelAlgSeq:  895 elapsed 582 ms
2025-04-19T00:18:07.099931 1 38833 3 7 GpuInterrupt.cpp:227 Reset interrupt flag for CPU execution kernel on Executor 2
2025-04-19T00:18:07.099937 I 38833 3 7 measure.h:84 Timer end             executeRelAlgQueryNoRetry           executeRelAlgQueryNoRetry:  612 elapsed 583 ms
2025-04-19T00:18:07.099943 I 38833 3 7 measure.h:84 Timer end                    executeRelAlgQuery                  executeRelAlgQuery:  573 elapsed 583 ms
2025-04-19T00:18:07.099950 I 38833 3 7 RelAlgExecutor.cpp:572 DEBUG_TIMER thread_id(7)
583ms total duration for executeRelAlgQuery
  583ms start(0ms) executeRelAlgQueryNoRetry RelAlgExecutor.cpp:613
    0ms start(0ms) Query pre-execution steps RelAlgExecutor.cpp:614
    582ms start(0ms) executeRelAlgSeq RelAlgExecutor.cpp:896
      582ms start(0ms) executeRelAlgStep RelAlgExecutor.cpp:1155
        582ms start(0ms) executeSort RelAlgExecutor.cpp:3227
          582ms start(0ms) executeWorkUnit RelAlgExecutor.cpp:3652
            0ms start(1ms) compileWorkUnit NativeCodegen.cpp:2852
            233ms start(1ms) compileWorkUnit NativeCodegen.cpp:2852
              99ms start(2ms) getInstance HashJoin.cpp:297
                99ms start(2ms) reify PerfectJoinHashTable.cpp:400
                  95ms start(2ms) getOneColumnFragment ColumnFetcher.cpp:82
                    New thread(8)
                      3ms start(0ms) initHashTableForDevice PerfectJoinHashTable.cpp:803
                        3ms start(0ms) initHashTableOnGpu PerfectHashTableBuilder.h:74
                          3ms start(0ms) Initialize GPU Perfect Hash Table PerfectHashTableBuilder.h:94
                          0ms start(3ms) Fill GPU Perfect Hash Table PerfectHashTableBuilder.h:118
                    End thread(8)
              0ms start(101ms) getInstance HashJoin.cpp:297
                0ms start(101ms) reify PerfectJoinHashTable.cpp:400
                  0ms start(101ms) getOneColumnFragment ColumnFetcher.cpp:82
                    New thread(9)
                      0ms start(0ms) initHashTableForDevice PerfectJoinHashTable.cpp:803
                        0ms start(0ms) initHashTableOnGpu PerfectHashTableBuilder.h:74
                          0ms start(0ms) Initialize GPU Perfect Hash Table PerfectHashTableBuilder.h:94
                          0ms start(0ms) Fill GPU Perfect Hash Table PerfectHashTableBuilder.h:118
                    End thread(9)
              0ms start(102ms) markDeadRuntimeFuncs NativeCodegen.cpp:1994
              131ms start(102ms) optimizeAndCodegenGPU NativeCodegen.cpp:1417
                0ms start(103ms) initializeNVPTXBackend NativeCodegen.cpp:1546
                130ms start(103ms) generateNativeGPUCode NativeCodegen.cpp:1200
                  0ms start(103ms) check_module_requires_libdevice NativeCodegen.cpp:274
                  4ms start(103ms) optimize_ir NativeCodegen.cpp:312
                  9ms start(109ms) generatePTX NativeCodegen.cpp:1507
                  115ms start(118ms) ptx_to_cubin NvidiaKernel.cpp:129
              New thread(10)
                0ms start(0ms) ExecutionKernel::run ExecutionKernel.cpp:132
                25ms start(0ms) fetchChunks Execute.cpp:3380
                0ms start(25ms) getQueryExecutionContext QueryMemoryDescriptor.cpp:708
                137ms start(25ms) executePlanWithoutGroupBy Execute.cpp:3764
                  137ms start(25ms) launchGpuCode QueryExecutionContext.cpp:227
              End thread(10)
            0ms start(398ms) collectAllDeviceResults Execute.cpp:2630
              0ms start(398ms) reduceMultiDeviceResults Execute.cpp:1528
            103ms start(472ms) compileWorkUnit NativeCodegen.cpp:2852
              0ms start(473ms) getInstance HashJoin.cpp:297
                0ms start(473ms) reify PerfectJoinHashTable.cpp:400
                  0ms start(473ms) getOneColumnFragment ColumnFetcher.cpp:82
                    New thread(11)
                      0ms start(0ms) initHashTableForDevice PerfectJoinHashTable.cpp:803
                        0ms start(0ms) initHashTableOnGpu PerfectHashTableBuilder.h:74
                          0ms start(0ms) Initialize GPU Perfect Hash Table PerfectHashTableBuilder.h:94
                          0ms start(0ms) Fill GPU Perfect Hash Table PerfectHashTableBuilder.h:118
                    End thread(11)
              0ms start(473ms) getInstance HashJoin.cpp:297
                0ms start(473ms) reify PerfectJoinHashTable.cpp:400
                  0ms start(473ms) getOneColumnFragment ColumnFetcher.cpp:82
                    New thread(12)
                      0ms start(0ms) initHashTableForDevice PerfectJoinHashTable.cpp:803
                        0ms start(0ms) initHashTableOnGpu PerfectHashTableBuilder.h:74
                          0ms start(0ms) Initialize GPU Perfect Hash Table PerfectHashTableBuilder.h:94
                          0ms start(0ms) Fill GPU Perfect Hash Table PerfectHashTableBuilder.h:118
                    End thread(12)
              0ms start(474ms) markDeadRuntimeFuncs NativeCodegen.cpp:1994
              100ms start(474ms) optimizeAndCodegenGPU NativeCodegen.cpp:1417
                100ms start(475ms) generateNativeGPUCode NativeCodegen.cpp:1200
                  0ms start(475ms) check_module_requires_libdevice NativeCodegen.cpp:274
                  5ms start(475ms) optimize_ir NativeCodegen.cpp:312
                  8ms start(481ms) generatePTX NativeCodegen.cpp:1507
                  85ms start(489ms) ptx_to_cubin NvidiaKernel.cpp:129
              New thread(13)
                0ms start(0ms) ExecutionKernel::run ExecutionKernel.cpp:132
                1ms start(0ms) fetchChunks Execute.cpp:3380
                0ms start(1ms) getQueryExecutionContext QueryMemoryDescriptor.cpp:708
                5ms start(1ms) executePlanWithGroupBy Execute.cpp:3991
                  1ms start(1ms) launchGpuCode QueryExecutionContext.cpp:227
                  3ms start(2ms) getRowSet QueryExecutionContext.cpp:161
                    3ms start(2ms) reduceMultiDeviceResults Execute.cpp:1528
                      3ms start(2ms) reduceMultiDeviceResultSets Execute.cpp:1602
                        3ms start(3ms) generateNativeCPUCode NativeCodegen.cpp:441
                          1ms start(3ms) optimize_ir NativeCodegen.cpp:312
                          1ms start(5ms) create_execution_engine NativeCodegen.cpp:421
              End thread(13)
            0ms start(583ms) collectAllDeviceResults Execute.cpp:2630
              0ms start(583ms) reduceMultiDeviceResults Execute.cpp:1528
                0ms start(583ms) reduceMultiDeviceResultSets Execute.cpp:1602
          0ms start(583ms) sort ResultSet.cpp:782
            0ms start(583ms) initPermutationBuffer ResultSet.cpp:861
            0ms start(583ms) createComparator ResultSet.h:881
            0ms start(583ms) topPermutation ResultSet.cpp:1318
2025-04-19T00:18:07.100021 I 38833 3 7 DBHandler.cpp:6148 Cache size information {"query_resultset": 0 bytes, "hash_tables": 0 bytes, "chunk_metadata": 0 bytes, "query_plan_dag": 144 bytes, "compiled_GPU code": 934208 bytes, "string_dictionary": 12288 bytes}
2025-04-19T00:18:07.100026 1 38833 3 7 DBHandler.cpp:6221 jsonlog { "name": "CPU Memory Info", "TotalMB": 15841.9, "FreeMB": 9460.05, "ProcessMB": 372.043, "VirtualMB": 16020, "ProcessPlusSwapMB": 193.922, "ProcessSharedMB": 178.121, "FragmentationPercent": 43 }
2025-04-19T00:18:07.100252 I 38833 3 1 DBHandler.cpp:1303 DEBUG_TIMER thread_id(1)
1402ms total duration for sql_execute
2025-04-19T00:18:07.100303 1 38833 3 1 DBHandler.cpp:1349 Table Schema Locks:
2025-04-19T00:18:07.100309 1 38833 3 1 DBHandler.cpp:1350 Table Data Locks:
2025-04-19T00:18:07.100396 I 38833 3 1 DBHandler.cpp:1300 stdlog sql_execute 2 1403 heavyai admin 802-W3im {"query_str","client","nonce","execution_time_ms","total_time_ms"} {"select  dt.d_year ,item.i_brand_id brand_id ,item.i_brand brand ,sum(ss_sales_price) sum_agg from  date_dim dt ,store_sales ,item where dt.d_date_sk = store_sales.ss_sold_date_sk and store_sales.ss_item_sk = item.i_item_sk and item.i_manufact_id = 816 and dt.d_moy=11 group by dt.d_year ,item.i_brand ,item.i_brand_id order by dt.d_year ,sum_agg desc ,brand_id limit 100;","tcp:localhost:34310","","1379","1402"}
2025-04-19T00:18:07.100409 1 38833 3 1 DBHandler.cpp:1300 stacked_times sql_execute 2 total time 1403 ms
  parse_to_ra 128349470982144 - total time 796 ms
    processCalciteRequest 128349470982144 - total time 779 ms
      processImpl 128349470982144 - total time 778 ms
  execute_rel_alg 128349917675520 - total time 594 ms
  convertRows 128349470982144 - total time 0 ms
